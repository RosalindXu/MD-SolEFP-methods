(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    339864,       6369]
NotebookOptionsPosition[    338824,       6332]
NotebookOutlinePosition[    339179,       6348]
CellTagsIndexPosition[    339136,       6345]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Plot", " ", 
     RowBox[{"comp", ".", " ", "LS"}], " ", "from", " ", "different", " ", 
     "conformations", " ", "and", " ", "compare", " ", "to", " ", "exp", " ", 
     "lineshape"}], ";", " ", 
    RowBox[{"overlap", " ", "coefficients"}]}], "*)"}], "\[IndentingNewLine]",
   "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Import", " ", "data"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
    "SetDirectory", "[", 
     "\"\</Users/Sherina/Desktop/holo.cam-c-lineshape-no_dihedral\>\"", "]"}],
     ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"l105cExpLSRaw", "=", 
     RowBox[{"Import", "[", "\"\<holo.cam-l105c-exp.dat\>\"", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"l105cC1LS", "=", 
     RowBox[{
      RowBox[{
      "Import", "[", "\"\<holo.cam-l105c-c.1-0_6ns-100fs-12ps-ftir.dat\>\"", 
       "]"}], "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", 
        RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"l105cC2LS", "=", 
     RowBox[{
      RowBox[{
      "Import", "[", "\"\<holo.cam-l105c-c.2-8_10ns-100fs-12ps-ftir.dat\>\"", 
       "]"}], "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", 
        RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"l105cC4LS", "=", 
     RowBox[{
      RowBox[{
      "Import", "[", "\"\<holo.cam-l105c-c.4-4_12ns-100fs-12ps-ftir.dat\>\"", 
       "]"}], "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", 
        RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"l105cC5LS", "=", 
     RowBox[{
      RowBox[{
      "Import", "[", "\"\<holo.cam-l105c-c.5-0_9ns-100fs-12ps-ftir.dat\>\"", 
       "]"}], "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", 
        RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"l105cC6LS", "=", 
     RowBox[{
      RowBox[{
      "Import", "[", "\"\<holo.cam-l105c-c.6-0_1ns-100fs-12ps-ftir.dat\>\"", 
       "]"}], "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", 
        RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.739292459105687*^9, 3.739292495917343*^9}, {
  3.73929292014255*^9, 3.739292947090191*^9}, {3.739293008353141*^9, 
  3.739293008533635*^9}, {3.739293056374741*^9, 3.7392931338812923`*^9}, {
  3.739293221628676*^9, 3.739293298613077*^9}, {3.739293353652822*^9, 
  3.739293432033894*^9}, {3.739293773237458*^9, 3.73929377563026*^9}, {
  3.739294207127632*^9, 3.739294218610097*^9}, {3.7393127413167057`*^9, 
  3.739312767084929*^9}, {3.739314743763118*^9, 3.739314743857938*^9}, {
  3.739314846537463*^9, 3.7393149289478617`*^9}, {3.7393152122748528`*^9, 
  3.739315217118237*^9}, {3.739315450861198*^9, 3.7393154511121073`*^9}, {
  3.739315486536593*^9, 3.739315500176469*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"m109cExpLSRaw", "=", 
   RowBox[{"Import", "[", "\"\<holo.cam-m109c-exp.dat\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m109cC2LS", "=", 
   RowBox[{
    RowBox[{
    "Import", "[", "\"\<holo.cam-m109c-c.2-2_12ns-100fs-12ps-ftir.dat\>\"", 
     "]"}], "[", 
    RowBox[{"[", 
     RowBox[{";;", ",", 
      RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m109cC3LS", "=", 
   RowBox[{
    RowBox[{
    "Import", "[", "\"\<holo.cam-m109c-c.3-0_10ns-100fs-12ps-ftir.dat\>\"", 
     "]"}], "[", 
    RowBox[{"[", 
     RowBox[{";;", ",", 
      RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m109cC4LS", "=", 
   RowBox[{
    RowBox[{
    "Import", "[", "\"\<holo.cam-m109c-c.4-0_3ns-100fs-12ps-ftir.dat\>\"", 
     "]"}], "[", 
    RowBox[{"[", 
     RowBox[{";;", ",", 
      RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m109cC5LS", "=", 
   RowBox[{
    RowBox[{
    "Import", "[", "\"\<holo.cam-m109c-c.5-2_6ns-100fs-12ps-ftir.dat\>\"", 
     "]"}], "[", 
    RowBox[{"[", 
     RowBox[{";;", ",", 
      RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m109cC6LS", "=", 
   RowBox[{
    RowBox[{
    "Import", "[", "\"\<holo.cam-m109c-c.6-0_4ns-100fs-12ps-ftir.dat\>\"", 
     "]"}], "[", 
    RowBox[{"[", 
     RowBox[{";;", ",", 
      RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.739293449493454*^9, 3.739293537525074*^9}, {
  3.73929377757902*^9, 3.739293778262981*^9}, {3.739294220176248*^9, 
  3.7392942234408712`*^9}, {3.739314730721044*^9, 3.739314733928308*^9}, {
  3.739314974055603*^9, 3.7393149765941*^9}, {3.7393150490092783`*^9, 
  3.739315117928774*^9}, {3.739315218365234*^9, 3.739315223323553*^9}, {
  3.739315489934766*^9, 3.739315491330098*^9}, {3.739315583794752*^9, 
  3.739315586561275*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"m145cExpLSRaw", "=", 
   RowBox[{"Import", "[", "\"\<holo.cam-m145c-exp.dat\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m145cC2LS", "=", 
   RowBox[{
    RowBox[{
    "Import", "[", "\"\<holo.cam-m145c-c.2-4_15ns-100fs-12ps-ftir.dat\>\"", 
     "]"}], "[", 
    RowBox[{"[", 
     RowBox[{";;", ",", 
      RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m145cC3LS", "=", 
   RowBox[{
    RowBox[{
    "Import", "[", "\"\<holo.cam-m145c-c.3-0_15ns-100fs-12ps-ftir.dat\>\"", 
     "]"}], "[", 
    RowBox[{"[", 
     RowBox[{";;", ",", 
      RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m145cC4LS", "=", 
   RowBox[{
    RowBox[{
    "Import", "[", "\"\<holo.cam-m145c-c.4-9_11ns-100fs-12ps-ftir.dat\>\"", 
     "]"}], "[", 
    RowBox[{"[", 
     RowBox[{";;", ",", 
      RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.739293550455441*^9, 3.7392936047849913`*^9}, {
  3.7392936375130463`*^9, 3.739293665468865*^9}, {3.7392936978563347`*^9, 
  3.739293698196774*^9}, {3.739293779610939*^9, 3.739293780394895*^9}, {
  3.73929422439736*^9, 3.739294227902629*^9}, {3.739315144044838*^9, 
  3.739315174994841*^9}, {3.73931522448976*^9, 3.739315226990384*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"In", " ", 
    RowBox[{"exp", ".", " ", 
     RowBox[{"LS", ":", " ", 
      RowBox[{
      "make", " ", "abs", " ", "below", " ", "zero", " ", "zero"}]}]}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"l105cExpLS", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"l105cExpLSRaw", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}], "\[GreaterEqual]", "0"}], 
         ",", 
         RowBox[{"l105cExpLSRaw", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"l105cExpLSRaw", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", "0"}], "}"}]}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "l105cExpLSRaw", "]"}]}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m109cExpLS", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"m109cExpLSRaw", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}], "\[GreaterEqual]", "0"}], 
         ",", 
         RowBox[{"m109cExpLSRaw", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"m109cExpLSRaw", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", "0"}], "}"}]}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "m109cExpLSRaw", "]"}]}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m145cExpLS", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"m145cExpLSRaw", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}], "\[GreaterEqual]", "0"}], 
         ",", 
         RowBox[{"m145cExpLSRaw", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"m145cExpLSRaw", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", "0"}], "}"}]}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "m145cExpLSRaw", "]"}]}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.739293789658718*^9, 3.739293891313963*^9}, {
  3.739293947450635*^9, 3.7392939610053797`*^9}, {3.739293996839739*^9, 
  3.739294073587628*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Normalization", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ListIntegrate", "[", 
     RowBox[{"list_", ",", "min_", ",", "max_"}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"intg", "=", "0"}], ";", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "2"}], ",", 
        RowBox[{"i", "<", " ", 
         RowBox[{"Length", "[", "list", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"list", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "1"}], "]"}], "]"}], "\[GreaterEqual]", 
            "min"}], "&&", 
           RowBox[{
            RowBox[{"list", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "1"}], "]"}], "]"}], "\[LessEqual]", " ", 
            "max"}]}], ",", 
          RowBox[{"intg", "+=", 
           RowBox[{
            RowBox[{"list", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "2"}], "]"}], "]"}], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"list", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}], "-", 
              RowBox[{"list", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"i", "-", "1"}], ",", "1"}], "]"}], "]"}]}], 
             ")"}]}]}]}], "]"}]}], "]"}], ";", "intg"}], ")"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NormList", "[", 
     RowBox[{"list_", ",", "min_", ",", "max_"}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"intg", "=", 
       RowBox[{"ListIntegrate", "[", 
        RowBox[{"list", ",", "min", ",", "max"}], "]"}]}], ";", 
      RowBox[{"newlist", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"list", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"list", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "2"}], "]"}], "]"}], "/", "intg"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "list", "]"}]}], "}"}]}], "]"}]}], ";", 
      "newlist"}], ")"}]}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.739294585405566*^9, 3.7392949186225224`*^9}, {
  3.739294960034873*^9, 3.73929496370223*^9}, {3.739295001398292*^9, 
  3.739295093311716*^9}, {3.7392953258484497`*^9, 3.739295375992469*^9}, {
  3.739295428536187*^9, 3.739295438718548*^9}, {3.739295473615315*^9, 
  3.7392955288414717`*^9}, {3.739295565754813*^9, 3.739295637166765*^9}, {
  3.739296654643002*^9, 3.739296659735034*^9}, {3.73929681920021*^9, 
  3.739296917573131*^9}, {3.739297055412814*^9, 3.7392971274452553`*^9}, {
  3.739297667994997*^9, 3.739297678090036*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"min", "=", "2120"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"cm", "^", 
    RowBox[{"-", "1"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"max", "=", "2200"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"cm", "^", 
    RowBox[{"-", "1"}]}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l105cExpLSNorm", "=", 
   RowBox[{"NormList", "[", 
    RowBox[{
     RowBox[{"Sort", "[", "l105cExpLS", "]"}], ",", "min", ",", "max"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l105cC1LSNorm", "=", 
   RowBox[{"NormList", "[", 
    RowBox[{"l105cC1LS", ",", "min", ",", "max"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l105cC2LSNorm", "=", 
   RowBox[{"NormList", "[", 
    RowBox[{"l105cC2LS", ",", "min", ",", "max"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l105cC4LSNorm", "=", 
   RowBox[{"NormList", "[", 
    RowBox[{"l105cC4LS", ",", "min", ",", "max"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l105cC5LSNorm", "=", 
   RowBox[{"NormList", "[", 
    RowBox[{"l105cC5LS", ",", "min", ",", "max"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"l105cC6LSNorm", "=", 
    RowBox[{"NormList", "[", 
     RowBox[{"l105cC6LS", ",", "min", ",", "max"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m109cExpLSNorm", "=", 
   RowBox[{"NormList", "[", 
    RowBox[{
     RowBox[{"Sort", "[", "m109cExpLS", "]"}], ",", "min", ",", "max"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m109cC2LSNorm", "=", 
   RowBox[{"NormList", "[", 
    RowBox[{"m109cC2LS", ",", "min", ",", "max"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m109cC3LSNorm", "=", 
   RowBox[{"NormList", "[", 
    RowBox[{"m109cC3LS", ",", "min", ",", "max"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m109cC4LSNorm", "=", 
   RowBox[{"NormList", "[", 
    RowBox[{"m109cC4LS", ",", "min", ",", "max"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m109cC5LSNorm", "=", 
   RowBox[{"NormList", "[", 
    RowBox[{"m109cC5LS", ",", "min", ",", "max"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"m109cC6LSNorm", "=", 
    RowBox[{"NormList", "[", 
     RowBox[{"m109cC6LS", ",", "min", ",", "max"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m145cExpLSNorm", "=", 
   RowBox[{"NormList", "[", 
    RowBox[{
     RowBox[{"Sort", "[", "m145cExpLS", "]"}], ",", "min", ",", "max"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m145cC2LSNorm", "=", 
   RowBox[{"NormList", "[", 
    RowBox[{"m145cC2LS", ",", "min", ",", "max"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m145cC3LSNorm", "=", 
   RowBox[{"NormList", "[", 
    RowBox[{"m145cC3LS", ",", "min", ",", "max"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m145cC4LSNorm", "=", 
   RowBox[{"NormList", "[", 
    RowBox[{"m145cC4LS", ",", "min", ",", "max"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.739295618781746*^9, 3.73929579564964*^9}, {
  3.739297694523967*^9, 3.739297710739332*^9}, {3.7393156045665817`*^9, 
  3.73931560706884*^9}, {3.7393157150041513`*^9, 3.739315717468504*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Plot", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "l105cExpLSNorm", ",", "l105cC1LSNorm", ",", "l105cC2LSNorm", ",", 
       "l105cC4LSNorm", ",", "l105cC5LSNorm", ",", "l105cC6LSNorm"}], "}"}], 
     ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2130", ",", "2190"}], "}"}], ",", "All"}], "}"}]}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Black", ",", 
          RowBox[{"Thickness", "[", "0.004", "]"}], ",", "Dashed"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Lighter", "[", "Red", "]"}], ",", 
          RowBox[{"Thickness", "[", "0.004", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Darker", "[", "Green", "]"}], ",", 
          RowBox[{"Thickness", "[", "0.004", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Darker", "[", 
           RowBox[{"Cyan", ",", "0.2"}], "]"}], ",", 
          RowBox[{"Thickness", "[", "0.004", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Darker", "[", 
           RowBox[{"Pink", ",", "0.2"}], "]"}], ",", 
          RowBox[{"Thickness", "[", "0.004", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Lighter", "[", 
           RowBox[{"Magenta", ",", "0.1"}], "]"}], ",", 
          RowBox[{"Thickness", "[", "0.004", "]"}]}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<l105c-exp\>\"", ",", "\"\<c.1\>\"", ",", "\"\<c.2\>\"", ",", 
        "\"\<c.4\>\"", ",", "\"\<c.5\>\"", ",", "\"\<c.6\>\""}], "}"}]}], ",", 
     RowBox[{"Ticks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "2120", ",", "2200", ",", "10"}], "}"}]}], "]"}],
         ",", 
        RowBox[{"Table", "[", 
         RowBox[{"j", ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "0", ",", "0.16", ",", "0.02"}], "}"}]}], 
         "]"}]}], "}"}]}], ",", 
     RowBox[{"TicksStyle", "\[Rule]", " ", "Black"}], ",", 
     RowBox[{"AxesStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", 
        RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
        RowBox[{"FontSize", "\[Rule]", " ", "14"}]}], "]"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "0.6"}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{
  3.739295616992375*^9, {3.7392958524357243`*^9, 3.7392958882239733`*^9}, {
   3.73929593407476*^9, 3.739296010101408*^9}, {3.7392977401831303`*^9, 
   3.739297776794456*^9}, {3.7392978267359047`*^9, 3.739298202385062*^9}, {
   3.7392982329972067`*^9, 3.739298350732132*^9}, {3.739298450235526*^9, 
   3.739298498368484*^9}, {3.7392986379777822`*^9, 3.739298755491365*^9}, {
   3.739298791058742*^9, 3.739298848155423*^9}, {3.7392989365213947`*^9, 
   3.7392989615415983`*^9}, {3.739315618462763*^9, 3.739315646928151*^9}, {
   3.7393156807382717`*^9, 3.7393156928363943`*^9}, {3.7393158508306713`*^9, 
   3.739315851078203*^9}, {3.739315885474983*^9, 3.739315891473715*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.004], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 
          NCache[
           Rational[1, 3], 0.3333333333333333], 
          NCache[
           Rational[1, 3], 0.3333333333333333]], 
         Thickness[0.004]], 
        LineBox[CompressedData["
1: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
9ZeVhP7kQbyfbKjn2RBt/j+HYaDI
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], 
         Thickness[0.004]], 
        LineBox[CompressedData["
1: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
Z0NodHEtqbsV8+k+G14eWyBedLgQ8/gB4ZcXt8cLC1qR9zEbbnP9NOICSzCf
UtkgF/m+dn8avn/XmsEGUt6bG3wVfL/nRTYbBtjSnbNftmA+5RH+UHxwitY7
mccFbLjkm73AWrEF8+kZG7Y13hs/S2rFfCpmw2fr+b6rtSfzuIzwg3j9sFtq
O+ZTBRvUGa+UNDhvkbeKDUenRvjuPN6N+VTDhqsnLj6av7YZ8+k1Gzbb3591
trAXeRvY8OehZInYWAvm01vi/rPs17yZ9B3z6R2RL2XT6vrKm5H3PXF/Ld+r
w+gawHz6xIaNvrzqVplPyNvBBlupPHte8w/Mp27i5/016a5DXZhPPWxoEHtd
NPUs7u93vrFhyqnggiPK/ZhP39nQUVI2Fir6C/NpiA3Nno9EC8SGkHeE8Nsn
ddubZ/B5JftfbAjJ1Df7cXHy+aM/bEhUOxwXXPEbeSfYID/v/fs219+YT6Ic
6F0zrkEn/UVeMQ5IHvGssSf6hzCfpnFgbYuk24iKCPbFGRww7VladuKTOPbj
mRwQh5KZt/ZOxb4oQ3x/Po6/9qYk9kV5DpwsWh2wxWDyvHEOBw5ocunxC2Wx
LyoR35/ac+tj5Uzsx/M4cCZ2e3/eu9nYnxZy4P3hy++WX5DDvqjGAQ3XwVmN
/nheYL+YA1+z7OTvWClgX1zKAYfycvE/NirYF5cR6+eJmu3nK2I/1uXAFiPn
+18fL8K+aMCBj3GkhSupk8+7reCAt7xbsAVJA/uiEQe0u/auP75eA/uiCQcC
KmXp+UOayLuOA1e1ewTvyrWwL5px4K4kRYbmvxz7ogUH9jjFc8qyDJB3Awd2
Tbu+QG6JIfZFa+L3zzmwxLFlBfLacaBwje2AqcsqnGcdODBVcVw/qNUY++I2
DkzYjOnljhsj73YOONow245qr8e+uIMDx94uJrvOBezHbhyYd89+9x7dDcjr
wQH9jxJfHm6zxvndkwN12y8e/R7mgLxeHJB9fGmvWJQjzrO+HPC1u31OoWEH
9mN/DsTKVL6tXeOOvAEcyDRTvN73aPK88TAHjNN8ZMc0ArEfB3Lgpbb7osrT
p5A3iAPHly4p0Ba9jPNsMKEn03Z6tHgC8p4i/Kh38OHxED7Os2c5sHdg+BZT
5xHO7xc4MDezIt8gG88bNSI4UHXjVITDUDrOs5eI69/6fYFrSQbO71EcaKi/
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
TXU=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         RGBColor[0., 0.8, 0.8], 
         Thickness[0.004]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8, 0.4, 0.4], 
         Thickness[0.004]], 
        LineBox[CompressedData["
1:eJw9m3c8lf//xmVkZJMiaZDR0I5SzivRVGjR/FCaGgqlNGhpZ+bsPdqy9yZC
sgohK4QG2SK/+3te5/E7//Tw6Iz7+bqv+3pf13nfZ9ahs9uPSEsRD1kpKfG/
/3t4RoCVuu/cLaRbJD/tNxuafCJgx9DqgRhpH9KM211OiX4R0LdiudsFw8Mk
KoV4BETAKSWVGQ0KO0j/e/rlwAiYUzT97KKbG0mJBsQLHkVAwI5Dye6H1pKW
/u8RGgH9qqPlMpusSFU8zzVKlAiw2a9nHzJnGWn7/17AjIBfLgHRpNzFpA/F
xIMfAZH77zpPzp1LOrdGqYr3IgKeFyeRrueZkX44ES94GwGPkxRGXYMNSUf/
94iPgO0fzrx6qmtEUvrfB6RGgPfNjabmttNJ/zt8g+wIiN4y58j1RAOS2f4n
2f35EbC14dHNfQo6JD5xOFUfIiDnbffhjZ+nIm9FBGzRe13g36tJyuk33f+k
JgKO3DuXcPCbNul/h+PZEAFfztrE7fqhirytEZB2VNtSx06D9L+3N+2KAFNT
35RbB1WQtycCtKZnTXgqUsH5DkSATkD1lZtzlEgDxNtnj0bAde8Tc1nrFJFX
mgwLQmKujlyUx/kqkOFa4+SAvwtlSP97+/2qZHD0T7s+y1IWebXJsM05vIe3
Ror0v6dr65FhTc2ytvw8GeSdQYYk7S9pHPaotXi+c8jwdGn8ThpIkzYST38z
jwzt9leVTvoOWot5F5PBV5Oz9bWZFM7XggzFojvd9JZe6/89fcMaMpyzmR/l
4jxqLeZdR4YPLWNbkxd0W4v1tIkMvDCOW+KpIWsx7zYycIb0aBfCfliL57uT
OD6GsEU6rs9arKe9ZIj+ETItb2OHtZjXlQxyY8sdpVx6rMXzPUqGxnezNt1Y
+t1arKdTxN+vac+vrfhpLeY9TwYtvVm+/R1t1mI9XSTD2p/N0lXH2pH3KhnS
+lMZH43brMXzvUmG6RrU5Z6cZmuxnu6R4XLOq89s6TZrMe8TMggDVjYoXflq
LZ5vOBlMJjgX3TJssxbriUYGFb6S/yKVauTlkGE90EQjj1utxXoSkkG0ZN6L
lw4VyPuKDDcO/23Le9KCvNFk2Pcz9Oyt3yXWYj0lkmHo3j1VwyUtyJtOvP+y
Y7uSvUpwvrlkcN9hXOPGarIW66mQDKGrfXxJJ4uQ9yMZVrX5zvqp12gt1tMn
MtSEeYZW/v6AvLVkkO6f3vdJtQ55m8gwi/fxoOmqUmuxntrJsGti7MzG89XI
+5MMk9Y8fqE6VIrz7SUT14uREntnpbVYT0NkqDLyj7EIK0fef2ToGmnm5qqV
WYv1JEuBlf88D1fFV6CelCigmZoasrqzEHnVKaBGDxiak1aBetKhQFHoRruR
3lzk1adAXPB2fwf7SpzvbArYXIgYXzQ/C/VkQrw+p3rBhpFy5F1AgRu2rotu
/peE811KAY4cpIbnlqGeVhJ/J75Z1XAjHnlJFNi/81961/FS1JMdBfqM647e
j4tF3i0UmLPnSqv8hA84X0cK0Ie1xw62xKGedlMgwoZfYZv0Hnn3U2DV0gwZ
+cOJON9DFJiW2/y1YNE71NNxCtzmNkeHGaUg7xkK9Cw2XeYXk4168qZAyRNj
WD2UhryXKTBUVpV973oGzvc6BaovJJ88vyAT9XSbAud3UaY7nUpG3gcUmPdi
efv1+kycbzAFLpRmDnz+Fo96iqCAHlk94NWyLORlEMdf7v7XNzkW9cSjwK+z
y34qzslC3mcUiL3ieqSuKgZ53xDHn+al3ByeiXqKpcBWxuvf6SUxyJtMgUO7
l6+LD8vA+WZSoMF5vV6NMBb19I4CHT13d9NL0pC3mJivzQE91+dxqKcyCqS9
fnPllUoq8lZRYNn6hX81o+ORt54CSy6Pv95Tmox6aqFAqs/DabOuJCBvB3E+
l/TxV29Pxvn+poA3M9dEKj0B9dRPAZOWxuVHw5OR9y8FrlxKi5zrnoB6kqIC
N2NGzrP0FNTTRCp8dGyQen83HnmVqdCqlkD1eJaGetKkQv3jqTTZdXHIO5UK
XfTQKYHymThfAyrkTLGeRf8Vg3oyooKJ9vKO0l1ZyGtGBdfFM1SkSqJxvgup
0OK86t6b0GzU03IqpF7+J0U6HY28VlQI6cz9zqLmoJ7WUkGO/HvR3PFo5N1A
he+bTKbbWefifLdSIcAwKTZqdxzqaQfxd7HD9QP7c5HXhQp7PXjlpoWJON+D
VLD6p969pC4H9eROhcvbXKxVn6Uj70kq9G4u9qzyyUE9eVJBt7bL9u38HOS9
QIUZ5oXpuTeycb5XqMB6p+I0d0U+6imAClucggL3lWcibyAV9unSNbN/FuF8
H1HB8NAKQaV+JuoplApuClK3Ka9KkZdCBT3eTfOKvAzUE4sKyupxBcYzKpBX
QAXBs+f5K/dm4HxfEOdzyzP/g8c/oZ7eUmHTpow3E0ok1088FU5bFX263fIZ
55tKBfOZ1+xcR7NRT9lUeHX/W8Z/pGrkLaDC47ilTR4H81FPJVTwP6QwP21h
NfJWUmHnIgPWviOFyFtD6GWNon9PZxXqqYEKiTlq+Sa8UuRtpULzxMFWVdkq
nG8XFR7t3hpnYVKJeuqhgsju9etWx0/IO0iFI//uNTJeV6GexqgwXLfV9typ
CuSVpsH5FRTFGWvqkFeBBlNCM+4s21aBelKlQeEujQ8LFzYhrzYNPpdTvl7I
Lsf56tFgn+qqRvWwFtTTTBqsWl6Y5lhVjrzGNHCQ6TPdoNSGeppPg8lGH8fU
CitRT4tpIL8j+4/dnu/Ia0EDr731/a251ainNTSwutL8afqWTuRdR4PYvgIn
Vft6nO8mGoSVvS04M/cH6smBBo8Vvlxyq2hC3l00WDfhWe6j0p843700UB6v
mf9wsA315EqD3ClfSnp2/EbeozQ4MNZxYTf1B+rpFA3uLJlTWHS7G3nP0yDH
eNjjZVwPzteXBnM+mC167f4H9XSNBrM2vU/8mjmAvLdoUDUzsCxBuQ/ne48G
F338ySb1I6inJzQY8omtsxroR95wGrSvTrV+u1kK8yKNBiGOpX9SIoeRl0MD
ReqcF5HvpDEvimiwc5JKUHzCCOrpNQ1YFofrlS7LYD6OpsFfhX2qmTfHcL6J
NIg457IzMHQi5sV0GngGq7DunZqA+TiXBpv3c3sP6ipiXiwk3m+XwOpMoxzm
xVIamMjd/i1roYJ58TNxfi4uv/XBWgnzYi0NJsi8/NJyRB3zcRMNTBMUzjlN
Vse82E6D9Kjs5pppknz8kwbfTrZdFfhqIW8vDToDN3QfWz2ZJNbTMA20fhjd
dNiki7zjNAj+ry/+zlxdzMdydHgvw4iVb5iO+ViJDjOSbTapbzPAfKxOB7v5
H2O/mhli/9ChgybP/wH3kiHmY306GIcXutAqzZB3Nh0W9GzujFGci/3DlA5X
NI8+e6e+BHnN6WBmEZC6/dAy5F1KB3m7FRrNXlbYP1bSIcs76GX5dhLykugQ
bvfIbM8TO5yvHR0O79oT56SyFfPxFuJ4zdf4y1/YjbxOdFAxC7/w3xlX7B/O
dNhYcFK7q+MkSaynA3SYfMTawyvgOvIeosOHRae5tG3h2D+O0yHgbGZ/+loR
8p6hQ6N2SvrsXzE4X2863L5jkenokYz94zIdevbmrxXdSEJefzq0j6Ru7bsb
g/O9Q4eKYCP3qPY3qKcHdDj06fvQR/Jz5A2mw/wGh7R5fAHqKYLgb2S9U3bl
IC+DeH6WzL8NM8g4Xx4dlsrPi1x25QHq6TkdltzaUmTieRV5I+mwRTp1YLPt
KZxvLB2yp6nN3nZ8L+opmQ4pOh8+UOrskTeTDsqsTL9GMzvU0zs6LNyiVP7b
dg3yFtPByUbP74GXJc63nA73rlm0eH9ajHqqpoNCnxI7yHwR8n6lwwPfJou9
vaY43xY6nOm/mfPG3gT11EGHMbdLpQn7DJH3Nx1enxu8CN6zUE/9hJ485PLB
wAB5/9JhvPLLLBNfXZzvBAas2boucvfxqagneQbca74nV35MG3mVGSDl0uI/
ljoZ56vJgNi9qv5OhpLrZyqDWB8OP2SslVw/Bgz4d+bh24kVk1BPRgy44zT8
9cuAOvLOZcC8aWYL9d3kkXcRA3jj77a/GlBBPa1gQH6tsvzxa7LIa0Ucj9HR
q9wfCjjftQy4eL1sqNNECvW0gQER+svtIk3lkHcr8flq8u/6W/+hP+1gQH/e
1tCPK2WQdw8D5OvTJkaaj6Ef/8eAc4tbbzgTfVOsJ3cGTFxntuG52Qj68UkG
BN3fc+RE7Qiud54MOJ8r9HFYP4R+fIEB/3X8WpK4qh/9+AoDRmvyFgx+60c/
vsGAG41Nype1etCP7zIg5HjBYMPuPvTjxwxgDFjKeoR1oh+HMmCmtupNk1d/
0I8pDJhhM33C84OtuN6xGNCePPeTRngPru8CBrBm7Peo8mlC3pcMWKnXGnCP
+RvXuygGWIquTvz+pw79OIEBi/bOWkm1/IHrTyoDvOjtl0nNNejH2Qz4NMMk
wMS2A3kLCH1orttw7nUNrnclDPjjnr/MS78N1/dKBrwozPupY1iDvF8Y4PxM
ee/T4WacbyMxn5ILDtE+1bi+tzJgfcC/aQte1CNvFwMu5TooZNt+wfWuhwEV
RS8yVpfWIO8gA0aODb/8qlGH8x1jgErdxxR3xUpc32WY8Pm5YvMN3zrkVWRC
cU7dskUaZThfNSZEvp2WLvpXh+u7NhNO6GRbkcKKkFePCUdPjEeQNtfjejeT
CYf1Vl9RnJCPvMZMyLGrLhsrqUXe+Ux4qHF3dlBeLq7vS5jg6HF2Mz3kC/Ja
MkFuy8PU0V25ON81TDDe9nCJ2bJq1NM6JixU8p73yisHeTcxoaxs76WHsp9Q
Tw5MKBjmbrB7lYu8u5gQ7pyhMcApR959TDjwsXnRaac81JMbE7JbmRf1D3xA
3mNMOD9Vb7FhUx7O9xQTVl/4W3TsbT7q6TwTUjSPbv18Mx95fZkQ/ULpzpkH
krx4jXh/w2AXL/kC1NMtJujvLrhGeZmKvPeZkNi6x1vvVwHqKYgJR9Qszkau
TkDecCY8F43I/pJ9j/OlMSG/OWxQ82EM6olDzF9L/+6pDQXIKyLOX/iPbxnM
KJzvayYYSG2X3aaRj3qKYcJlm8yzOd5RyJvEBI1fM1Ucd+WhntKZ8M1n8pXU
mdHIm8uEUZWQwJd7JPMtJM7XW/fPA0T/E+uplAmPufb+NgezkPczE5q3Rlff
ao7D+dYx4Z1JXe8miwzUUzMTdKcXpPpHJSDvdybUGhzf9nJaKurpJxN8v5M0
1eSSkLeXCU8WDLVHykj67DATxp0cnwZ+TUI9jTMhRuZuYkd+IvLKseDEc9Mp
65uTcL6TWOD2vXzKy3OJqCcNFkyeQnHzO5SEvDos+HNfcHTgdyLqSZ8Fdws9
5qUFJyLvbBackXoV5DqUhPM1ZcHMiv/OukQkoJ7MWSDz8+h/NsaS/r6MBeTr
P84qf43H+a5iQYiPp6MKpKKegAX9ae929yTGI68dCzyW7T4T356KetrCAunD
PaFn9iYgrxMLVk4pt1zYkYq8ziww4AwojcgnoZ4OsODSv5SX4XoSPR0mjm8f
aZt0VgrO9wQL6l4aPxthJqOezrCgK9R3x4GnGcjrzQJ5ryQ9rZBE1NNlFrjb
XNrsqJ6NvP4sqAqc1HDuQTzy3mHB++AZv5yTc1FPD1nAn3Pzse2+WOQNYUHq
170ehqR8nG8EC7oveKklGsSgnhgseFPyYmLlgkLk5bFg6FW7W267RE/PieO/
uv3lY0Ex6imSBdo3DO5tLY9D3jgWtHIeZLzr+oB6SmHBwp9upLfOScibxQKa
fJnlhPkfcb7viPNB9+h5cigT9VTMgoTl22xYPz4ibzkLom/37x0zzcP5VrNg
jNbC7dryEfX0lQWB3ypuNbILkfcbCwyf6qfVPi1BPXWygBmsFertVIq8v1mg
8/rgovScYpxvPwtWNc870Fsk6Vt/WbDtklvRf/VFYr3kS7Hh4NU42uT1VeLz
FyPDhu0P5bYMHS7A45vIhhttZi47hmrEnxemyIbEeYWefn/zxXryV2aD14sQ
q1O9dTgvNTYENdx6VROZj8evyYZV/Yzu0eGv4uOxn8wG7fzZ/F6ZAuSZygY+
85cgUroR5zmNDXL2fuTx/kKx/nQN2GBWVOU7MbsR5zuLDWsdoFDtdxnyGrLh
b82HI0+2NYn10WZMfN6/VJUk7c/i81VmxoYtPMX8MKsmnP98NgTGbZHJulWL
vAvZoHkr8sF8xyaxfphL2GAkrXT6s6Wkjy5nw/zSY3+v+DYhryUbluio14we
bRXr2cOKDW7NvXaPoAl5rdlw99qO1/ykDuRdy4YDmvDN63mTWG+Wtmzoi+HJ
JEz8hbwb2PAmw+EP174Fz+dmNsgXuoTffdwj1r/cVjacNr+V7mfbirwObFje
OZ7pqtSH+trOhiPK927a3vmOvLvY4BPaMelw/QDyurChqLT6FSNe0j/3Efyu
pn3fdUeQ9yBxPuXfdyXK9Irne9+NDRvdAl4WHhtFPbqzYVBl84r9gkHkPcaG
YdU33MTZUuK87HySDdWdc/a4HBlD/znNhlPdTelPeqTE+c7Skw202uKoJ83j
Yj0ZerFhR/bZ92e+SfYDLrBB1/xuhOiADObFS2wwmbIZglulxfm6248Nivyw
b8FFEzE/XmPDz/spa2ZskMP8GsCGHqMFsrrHlMV5P+0WG/5t31q586IC5tlA
NoQPMCqyH6tjvrzPhjZySdu2YGVxHr//iA3tL2Vlmkha4nzsE8SGZ/v+e/jo
uDrm3VA22MtvOsRKwP0Y56dscPGkSdXlaovzug2FDRo+UTVTh6dhHqWz4ZW/
3cnH+VPF+d2QxQbz6dNWuCybKc7Talw2yOQUCIa1ZyKvgA1TtlwY/qprhHlV
xAaF0HPJTSNzxPm+7gUbbi9OW8vbMRd5X7OBYbTe+84pc8zPb9nQQX229u2i
peL8/SyGmL857bDhJEvkjWcDlXrlnWXNauxLSWzY7HJK5wbTBnlT2VBKt5kd
5LQReTOI43309aGTx3bsb9lsUJU+mfPm+17kzSP0Fu4leJ/jLp6veQEbTuRr
3t4V7oX9qogNJcaUp7r8+8hbwoaI5lBHWRe2OM+PlBLHNxxR1XU3Enkr2OA4
MfOUSVUC8n5mg5+95djYpBRxv8ivYYNd2tnZqrfjkbeO8CeZuQHqs6OwHzUQ
+v3dFH9c/pVYT2HNbMj/dL7A9JIIeVvZUPxLa953Og/72nc2TPNZoaP4kCHW
k1sXG9JENOn7fiHI+4s4v/dzy6Rkb2F/7CH4h/sqrid5I28fGyg7zi+z/npI
PF/dQTbUOhQeOVG6HfvdCOGHMmUt/7lvRN5RQh+liqI60lrxfNvG2VBjrkap
trTCvinNAQX3X/uypJYhrxwHMmTTj8plLRbrKUaBA/mrU243UST7jZM44D8v
uTUz2wz7mSoHuvdJOUT5GYr15K/BgWb60qAqDSPk1ebAaY/Xye8XTMe+OIV4
f+2bjtosA7Ge7PU4sNvwe56Uog7yTufAuPHus+9SpmKfm8mBvntZTE8ZLeQ1
5EC6nX58ZLq2eL5yxhyQjnM64DpFDfulKQfcK02oyUYayDuPA+v1Tdi2YSri
+ZaZc2Bd6rKJI/tUsO8u5kDNakF2zgEl5F3GAZU1/httxxXEemJacKBDu3eM
w5VH3lUcyFbu2jfSI439cA0Hbsn/OmJ5SFasJw/gwAWazniJphTyruPABjdv
+1mtMthX13Ng3qZlwWUHR9GPN3FgQpCVyQtHyfdd9sT5OKfkV7ttEP3YgZhH
rIfWE3Mp5N3OgTv7TpoYfu5FP97JgWMQb6BvN4p+7MyB2RMonFLLbvTjvRx4
uT9XZuHmIfF6l3aAA0kRgzFJZT/Qj105RN+/mO0U0Id+fJjgY7z+rizoQD8+
yoFQQ+sw/rQe9OMTHPhd6JqRyv+OfnyKA1oqGlFOUT/E+cb5LAfiAxZ6Oh1s
Rz8+z4Hn2RsHV7S1YT7z4cCN8YIX7k9xv9HQlwM683Rcdi+Q9Ds/DkRbHRXN
OyL5PvUaBz77p9qHpteL1/dufw7w4ud4ks+0Ie9NYh5TVbz1r1Vh3rjDgZU3
Sw+zsluR9x4H/v3VSv79G7+vffaQA8NbGzd3CiT7jU84YOKRqa2eUYK8IRyA
D3eu6i1qEc/XJ5yYv98wfQKnBPMfmQMt1c8aHgc0IS+NA11lvn5Zfdj/bJgc
MNRftgnqGpCXw4Hgu62L3WNKMB/yOaB6LrIngFwrXt/VRBxgT0vwKIsrRd4X
HBhcu2uqWmcV5tVXxPlaWP3qwuUy8fpeF8mBQ019w3s+VCBvNAfeW1Jv2mpL
9lPjOLBlnZHDguBS5E3kwKywq48qjSsxP6UQ8+CwrxmoFmK+TefAGq6n7IIp
uH/pk0Xo53KWk4Uj7oe45XJgSYKP84tHlZg/8zlQ50R58zkB86RNIQdmlIa2
hU3DfGf+gQPfsgZjYwYSkbeUA8o3E9qqi8owP1UQxx/Q5H3ifrxYTyOfCL2F
bbNU2V2KvNUc2G6Zm3hJJw7zci0H7AXmpMVxxZgXv3KgJyJwpkaQZP+riQNl
trUiK6f3mBe/ceC/eXcnpq9KQt52Qk/3Wx2nJuchbycHHtmnFfsop2Je/MmB
5fSPZrusspG3mwN5l1UyZnxJx/zUy4HONp3YZE465sUBDnheu/eoIygTeYc5
YLX7bdbMt7i/qjvKgdUbVo80LchC3nHi+XSfv6d2SXgncGGRfwJr7ZkszIuy
XFBfrz/ssDcWeeW5kD4/irpnYxbmJyUuaDY4zhvnxGBeVOFC4c8RhUKBZL9R
nQtL+bpmbimS/qDFhddzTl1cRsnAvKjDBdVXike1XsQiry4X2hmX5q7MScO8
qM+FkOdV9uVxuH9rP4MLeyNSu2vHU9CfZnPBXG7TxDmp8ZgX53Bhe5Hbt7ZC
7KO6plxoYTn9fHM5AfPiPC4E8QInmuxPRn9awIXm4OoQxkvsi22LuJDqqLTP
NCoZ/WkpF2xPr9x7YW0C8q7gAqX13OLQjhT0p5Vc0KZQzsjvwz7JXM0Fq4Xz
rl/4koa8JC7I7f9v5rhWHPqTDRcqPHxs3Qwy0Z/suPCFF9URXRSDvBu5sHpt
mO/cw1noT1u4YE2pVVV+F42827igz9fNvRWUjf7kRBzf1XUJRx9Hoz/t5IJD
zQBph38O8jpzQfT8yJK6HTHoT3u4wKyRnX1LUbKfuJ8LxS85D9a2Yn8r+48L
Ow6vEkxSwv6YdogLi8HY519wEvIeIea9w3rxv7OS/cbjXAh0iC9TFGagP3kQ
enlx7Ht6XzbynuHCxa677Pupkv3Pc8T79f/N5/VnoT95c4F0KJBZ/z4feS8S
+vrC7xZtkOzHXubCvGnutG1XipH3Khc+CjooezZkIK8/F3y91YL2fZf4000u
3Po2L/OHRgby3ibOvyBM4+L6CvSnu1zgzPlh+05G0q8fcGHfv+6RWRdxvy7t
MRdmHlQq9q/ORH8K5kJVU9zJ5xWfkTeMC4bsL9HGm3OQN4ILBiX9WeVq+H2f
D5ULax8Zurr+yEdeBhcCJvhuptdUoT+xuXDpWsMkNwuJH/MIffzYTab4Yb9c
KuRCye5RB/acMvSn51zgbePqvLyC+51qr7igUvP4SECK5P6KSOL9Nue8sST+
FvtTFPF5aWOvFTdVI28soS/yHfnj1fh9Wn4CF/56nb1l/bkO/SmZC/cfR/1Q
LZGsP2lcqD32nuF3FvfvwjK5sJHc6eO9rxz9KYc4nxb5vaE5kvXnHRc2xdzS
ZFHL0Z/ec6FouaDKxqgNeYu58Mktpv9mViX600cuRJzJMwty+Y7+VM6Fcf/q
KaKRauT9xIWX30T/+Kad6E/VXHDsd3o5+K4e/ekLFzwtbL2qv3chbz0XDs3Z
lPXXvBn9qZH4m++4zv/iT+RtIfS9ZLCr6nQ7+lMbF6aEqFv7NP9Cf+ogPr8+
JcvMBO9HCvvBhdznY2/i7PB+KP/fXLBw4BXky/xBf/pDzLtbn/TB5A/y9nMh
22+xZp7yIPrTEBdOnkiNf1Pai7x/uRBXvyxp/ey/yPuP+Lt/fvrJ97jfqDuB
BxvP+A8OHZfCfCzLgwgosnEMGUZ/msiD1K1h2bZV0pgXFXnwMOOs0WXhCPIq
88Dvdtew93UZzItqPNB2PDo/kzWGvJo8GF1mbHHkoWS/cTIPdri7VYbfmYB5
cSoPPHw/L/OTV8R8PI0HtpfXdgSoT8S8aMAD6qjIXV9LBfPiLB5cna3I9PJT
wnxsxIO8abUv1zmqY5814cGvtxsOFliqY16cy4MRE9NfzhM0MR8v4MHsjUaX
nPlamBcX8WBnVs3AgNFkzMdLiP/f+fpLyGVd7LPLeVCesay9bpIu5mNLHnh+
SLlXoSHZX7TiwUfy8p/5JAPss9Y8ePO56OsTG0PMx2t5cD7Te7nMNUPkteVB
4EOZ4NIfZpiPN/DgCqNzqbreXOTdzIMFDX5bHxstwT67lQcGLUEtzy9h/9jg
yIODdV0Fy+5ZIe8OHgT7Bg0EXiFhn91NzEdk/bJfZIf9fQ8P9pl83bN0y1bk
3c+DQ0NVTnT6buzvB3mQTB14+DfIFXndePB3s3nuRUsP7LPuxPmXkj/9SdUf
+/sxHqxZlJt670U48p7kQVBx76ua+5L9xtM82D7adY8xORb7uycPTriD50O/
ZOT14sFQdghnnkcS9tkLPOgLKGuoPBODvJd40G5xw/RX4Rvss1d4IHvHfI/x
zefY36/zwOfCwTObQ3C/0fAGD76toioMbeRgn73Ng0vhVw1edERgf79LvP7h
/BSbeQ+Q9z7x/CvRckt0rmKffcSDHxVjW1KqJbxBPLD5cNksXmMv8obyoJc8
yecPxx77+1MezL+zZHfjRDvkpRDXT+zd2y3Ga7DP0nlwkT9W+NDeEvs7i3i+
e16nQeli5OXyQNT4zMxAexH2WQEPtppaMOVHTJH3GQ/4S/YrhhmZIO9LQv+N
Xp9ox1FPBm94ILAZbQ13nIW8UTxQ+RC/sX6FAfbZGOL8HVoe12ati/09ngfq
JX+rhm9ORd4kHqwbXmfbT9LGPpvKA93MxoHFpZOxv2fwIMv2YI7eBLx+nmXz
ILNrcgXLURP7ex4PcoU+nybETELeAoKHtHzD9GF17LNFPEi8vEnvuKM89vcS
Hvwb3+0T9Rv7pVMZD9hFvLFyP8n9p5U8iPr19mBnCX4fZF7Fg5CK5oggSynk
/cKDjPJQh+MKcuhP9TyApkv3ZhqPox83ENePb2HCPjUZ9KdmHqx8OtP61oUx
9KdWHlikHZkbpSyFvN+J6+91X1PZhRH0py5iHnahmt7XJPuNv3gQrpvyIe/x
EPpxDw9Wn3jccKoZ9w/9+4j3M9B+Ptd0AP14kPBD030Tgwq7MT+N8ECub+N+
yv0+9OMxHihMc6I8MOpEP5big842o9ZNpX8wL8rwweztcv463Vb044l8mNmV
qygr6sH1R5EPq+PtVmjvaEI/nsT///1GMa8qH/JVM4KshuswP2nwIWdtkt6j
qT8wL2rz4YXShmdm878g7xQ+7Jq44YGLUgfmRT0+jEgpKDLmfsG8OJ0PDt/3
PNQvakXemXwYPZKbo5FXg3nRkA8rpCpdFtCbkdeYD3F8LeW702uQ14wPU5LW
MgXduL5bzufDwo+vZoUOf0HehXyYu5cb8W06fl+tvYQPzInt6ze9xftL5Zbz
Idq/4UnPccn9SRZ8KFnqet1Oth7z4io+eIXeLSSFliLvGj6Izo8eW+Jaj7zA
hz8FhiznX4WYF9fx4YqTML7yZj3yrideX9E3t4r/DvPTJj5YXAq08m6qxbxo
z4cgS02H2xm4n+jhwIfxoN7fyte/YF7czodcqQ71irBczIu7+OBqdKW2ZawK
eV34cFvZRSu9Iwfz4j4+1HEpnecSsF9qH+TDjgUZL2dsz8P85MaH/aJa0Qbb
csyLh/nQFVsls2PCO+Q9SszDi5OSGyHZLzjBh+oZd2/forzDvHiKD03F627w
+94h71k+zLrh/NfIvADz4nk+2Nc7hF9sxr5134cPqr+2e3lEFGB+8uUDh77z
y3V2CuZFPz78cBg5YLn/PfJe44Om0+m3D67EY14MIPiMFMM17N9jXrzFh8Sv
uwKq9XC/0TCQD2FTmleXHSvAvHifD46vZQaDLkUh7yNCrwHv226rSe7ve8KH
4CNHvlc9xv3IuhA+BPp/i7xpkYe84XyY9yzv4/qT2D8SyXz4/WwXtcAsB/Mi
jQ9+1X8qHlnHIi+TDzMW/m74bpSFeZHDh2Mu05Lyd8YjL584X9E2ueuy05FX
xIfHSdWN5wwSMS++4IM0pZPhHI33c9q85sPhyKDr6w9h/zB/ywepHbSH9Mgk
zIsxfBjeLeXVZYT3l6rF86HsqbnmrQeJ6E+JhB7XdXr5a0j211L4RL4IlONu
wf3IunQ+bHD+fn3e9STMi1l8OP2gcux2jeT+ylw+UK4LIn34kv23fD5Ya59i
arVL+nshoZelo1O6XmC/vP2BOH8qC93qVVPQn0r5cCnV/r39P9xPdKvgg+HX
0VKfKanI+5kPy8xH76X+jkd/quFDbPKNm/MEqchbx4dInQd6Z97gfqNuAx8m
6UBi4d1U9KdmPvSE/WmPuYz7rSPf+JDVePeVOgP11NbOB5dXqtd7t0nuz+3k
w/1hknP6JLzfNv8nH2JqpWfk62Hfiukm+E9ksYf7EpC3lw/0UZ2idW7Z6E8D
fHjFmTl92hDen+o/zAf1sjHB1wl5yDvKhye71Jrkvkn67DgfJixwzAv2ykd/
khaAq0e558n6aOSVE0AYKadbbn0h+pOCAE4LW46VdsYg7yQBzGj9JHuFuP7E
/qQqAHh0cubgHNRTv7oASqe8aal5+wF5tQSwKrplCktZ0t91BBBfPoF1OK8E
/UlXADtU3+j7dkl49QWwZg93xqe9H9GfZggggBQ8R7UmD3lnC6C29lteTFgJ
+tMcAcimb/F6cR7v3/cwFcDE64Hm1/M/IO88AQxUO/gKM0vRn8wFkDX2UutG
dxH602IBFCTFDr5YVYm8ywSgY75K31ivCP3JQgANh4+rZ/CqkHeVAJ7oWqrb
Zkj2a1cLwDprVcUa2y/oTyQB6MnPs9wZnI+8NsTxPZ509Jd+PfqTnQD6BcaO
Wo/z0Z82CkCUcHqq68hX5N0igLpLQ+cVVuD9Dfe3CUDBcc4Nxy8NyOskgHtp
+nV69yS8OwXwoWB9cxy5Ef3JWUDkK5ddEcck92vsFYCVw+n1jcpN6E8HBMAx
ZxaPxH1Gf3IVwK5Lghz9743Ie1gAL/X6O+U31qE/HRXA6zB5LWpPI/rxcQGU
vPi3ZyavCXk9BLDOW3V555Qm9KczAngnSOou/yj5PvWcAG50h3oYfcP90mfe
AliQVCcI0e9Ef7oogOFkbc0+F/w9xv3LAkiHy3Hcvb/Qn64KgDHDx6BVpwX9
yV8AkfOPdZY/70HemwLgzotyCV7Yiv50RwA7jWP87Sb3Ie89AaxcMOWGA/k7
+tNDAQQeWhhytGYA/emJAKa2CaJPD/5G3hABjPDupSqODaM/hQmg/evzBZMs
e9GfIgSS+5ckv/+hEvO9uJJN6R1Ef2II4EXmtA3SMlKYF9kCeOWdt2VRBt7v
FcYjjk9t1kBLHn4/f1soAC+No7JPZkphPn4ugNbCYemnKVKYF18JIPPtZI/k
cBnMi5EC2P3ofJpHsjTm42gBXJxVeS1wgjzmxThC36bz12uaymFeTBTAEnvP
bVZk3D9UShEAuzp9cvJ+BczHaQKQfuAz256njvk4UwBmZ1zdOgOVcb8nRwC3
Waf0ojZrYV58R1yvV0eVas9iv0x8L4D9gtnZGmk62GeLieeTWRc/1WtjPv5I
+MnZ23MfdE9D3nIB/PvvjM6Z9qmYjz8Rn7dzyYnYhTORt1oA1/ov7ew3n4l9
tlYAy9+rnJivJfk92lcBOKlsK26fbYy8TYQ+7XvzbTfNxT77TQDKp0UNic/M
kbddALOzvpx5s3wp8nYIYM7dpLtWSy0xH/8QwARz3WLet9XI+5u4fp9lFKal
2WCf/SMA55pY88JzG3G/p18AJ76nKf0O2Y68Q8T16SSyuzZ1H/bZv4SfdD3b
eKjXHfv7PwGknKhKzm73Qt4JQoh2vU96ZfQA+7usEC7UmjfnhbGRV14IHqZD
37xrIrHPKglBQJM7OTaQgP1dRQjtsRbUfRNTkFddCPy8v7ezjsZjn9USQmP5
hbun1aKwv08WAtld/ijp10vknSqEqj3TCgaOirC/TxOC4pQ639C7POQ1EMKv
abqDCnsY2GdnCWH49Q2/dZtCsL8bCaHu8GQNz/c3kddECEHWOy52eXpjn50r
BCMvdwMS9RD29wVCWGtc7DJK3o68i4QwQP6Q2GG3Efv7UiE8G/e+XTp9LfKu
IP6fdCvLytQK++xKIaSOr5jTUrcU+/tqIeg8OpinlbYYeUlCGHI+Otf73Fzs
s2uFkG1qpHo53Qz7uy0xz2c1+cxjhsi7QQjTIgM3UxVQT2mbhVBmVrLFWW86
8m4VwlGz7V8Vbxpgn3UUgl3F7bRFyjrY33cI4SutW3UWayry7iY+v9qLtHiy
FvbZPUKAUaWW0xHa2N/3C6HJwn8q2Kkh739CGKuNmXpMRgP77CEhPI6kfzEr
UkHeI0K4mTHQkaomuZ/8uBA6A6TTVz5Vwv7uIQSNB/xtc1IUkPe0EBbPZrmf
LJbHPusphA97NESucdLY372EkN+Y5JJ4H/tl2gUhzO3uCOmuGEc/viQEpfGR
KUukZZH3CnF8hnWDdbNG0Y+vC2F9nXO34UFp9KcbQtjPdF5AnzuIfnxbCAsG
/R5WLJJCf7orBOMnVzuzP/SiHz8Qgp+DyPH3glH048eE3m6t9uNs7EY/DhaC
auHw70OGQ+jHYcT8PvuSQ3R+oh9HCMHmy/3uPZv70I8pQnBumvq6ZmIn+jFd
CDT7fytn1HdjfmIJ4d2NzJGZuh3ox1whmKo1sSfN/YG8AiEsG/dSYFS0ox8/
I/guPb1e4N6GefGlEErOaY/ly7bj+vNGCIf+3P10IAXXO7coITxabHn/Xa7k
+9RY4vg+htg8V8D1fU2CEGwXzSiyiGvDvJgsBGGwbOzo0GfkTRNCvTYjtbu7
FfNiJjGPRZeGZ9DKMS9mC2HGQN5IcHwL8uYJ4UGJVec/fgnmxQIhyF1b2v/Q
FH9fkl9EXN9FfVf7mkswP5UIQd/1jve3g02YF8uEMH/cIPxkcDHyVgrhoK5q
SNjlBsyLVUK4F9H85Patj5gXvwjhsBIrlq1fi7z1Qth43KMxaXkZ5sVGIfQs
ff7O7GAV8rYIoUHp2sbUf/h7RfM2IXwiqZhft6vAvNghBN3noxGpoRXI+0MI
55WToq21Jfd//RLCpDb9NbPDKjEv9hDX396WSSorsW9V9RF6qAx51neqEvPi
oBDev1Dq2hyPv5eKGRHCddnTA4z3lcg7JoR045Z1UdsyMS9KiWCtbl6poUUF
8sqIwG9Q5vByQSLmp4ki8N5t4nfyA+6X7lcUwYWVT9bXiOKRV1kEX2OLmbLW
pZgX1UTE+htld/J+HOZFTREEdnQ4/HAtRt7JIrCev+PI3S2S/a2pIiih9L8d
bcZ+2a8ngtCC77WX9JMxP00XQW/DI0U6KQ/z4kwRfDJ8GR44nIq8hiLgLFrd
k5qVhXnRWAThnaGP3qdmYF40E8HcFbf8VfMk+1vzRWCSdtCg/08m5sWFImCm
9yesHJLwLhFBpW6cbbCfZL9nuQimPn8WZ1Msuf/UUgSNS2K+nuRnIa+VCNqj
+09tmBCLedFaBJ0NtZ6ax7MwL64VgeLPujQ9L/z9opytCHzN9Jcei8bfT3av
F4FS8Opy7TcxyLtJBBNdA/W2kiX7PfYicJh+/0lvFP6+Mc1BBBkRhRYdMWnI
u10EW623D5zMi8O8uEsET9PbZZm/8X7N+y4icDvxRkarAPdLL+8jzuflRwf0
c5PRnw6KIKAUzOwuJyCvmwi0918ULTqSjP7kLoLBzWV7Z1MT0J+OiaCbEVhf
WZSMvCdFULNu8cdVMxPQn06LgD4p6piXpuT+VE/i+JZI9/5dGG/9f/ncgBs=

         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         RGBColor[1., 0.1, 1.], 
         Thickness[0.004]], 
        LineBox[CompressedData["
1:eJw1m3c8Vf8fx+1VUZGMiEjaG2W9Kak0NVAaihIqFRUalAYNMnL3HlKSFSqy
ssnKTmYSDYWU5He+9+3nnx730b3Xeb7P6/M6r9f5HLpHTtu7SYgRP1JiYqJ/
//vxjgHtnk1+S2n2lgEqT23bfWNg38vZhTo6dpazb/TtTA+IgYi7B++OXNlg
SSETP0Ex8D109nixkY3lf2/3vxUDX06afFc7YGGZrk184F4MhDvwmq45mlmu
/O8nMgY0qeJBV2wWWdZzvc0VyDHw8NZQnlnnSkv7/z7AiAG+DPfS3fnzLMvL
iB9eDOjZNheEti61PGOuUM+Ni4H3zda/DyqoW/bvJD7wLAbGh5qdXX4YWh77
7+d5DEjOqAm8PUnZUuG/X/AqBmKsl5d6vZhr+d/ha+fGwJHLXRoxXxQs5zuH
5Q4VEr/v2nS7BiddSx5xOPXlMTCklXxaKVkWeWtiQLZiX4K/lLZl3pChc1hj
DIx9G/mpYSFn+d/heH+IgdPS5u3qAzORtzsGxOQ/B9isn2T539cb9sWAed5o
kCNpKvIOxEDSMf62CI40znc4Buojv40Z5khaDhNfn/s3Bm5uWG9x1VEGeSVI
cGb8TkTG4D8L0XzlSNDLBK+zUpMs//t6Z0USaINqxq3HvRYiXhUSZPMPd/26
IW/539tVNEhg8Wt2qcXCGgsR72wSVCVsm2b/Ux7nO5cEJzQ37P2UmZu1kXj7
04UkiOSoFFnlyCHvchIwwy7L7iDXZInma0wCTZXiFW43ZCz/e7utOQnc9YNV
Hu9ozhLxriNBRb/T474OSUuRnjaR4Lji5phzWYVZIt5tJPB2Mb+S5ieO891N
gsE8FRnPmmdZIj3tI0ES1W+ugctv5D1MglOcLZeVqkstRPM9RoLG3cIgEmfQ
QqQnLxLM+eP7wzOi1ULEe5YEcjt9B0ve9FiI9HSBBFGNe8MjGZ8sRLyXSWBv
7zZtJK3GQjTf6yTIfc2sW3f6u4VITyEk8EmcZ3bD4YmFiDeMBDMrfIw3PP2J
840mwaGs/fQpcRVZIj1RSbBHnfb6ybZBCxEvmwRLVcdOnBlvyhLpSUAcL8N1
jf2/IQsR7xMSvJWTWJ9m8B55k0iwc2Yz25c8aCHSUzoJJo273KY2tWaJeLNI
UNCi6Map+WEhmm8+CZQirjfojDVkifRUQgL52WdepGl/R963JPD/s0RcXLIq
S6SndyRony2ovCD2GXmbSfB4fPOiXW4pWSLedhK4Rc24f02i00Kkpx5CT7EF
FWdXpyPvFxKEmCn6pvTV4Xx/kkB5KG+1FLxFPY2QYEYDVenJimwLEe8/EgR8
1lz+SLzRQqQnKTK48F+mW+XTs0R6UiDDoZHw1Q/H2pB3KhkyFvmZLevNyxLp
SZUMf15/C+7624G8s8hQwIyzjI+ozBLNdw4ZEs4Fb7D80Wkh0tM8MjyKTgru
mleNvIvJ0O57gFPzvdNCNN+VZOhxdzBq4lRlifS0hgwaK0aDZv1rR15LMtjM
iZzje6UiS6QnGzLc3+3z+vqHCT3ZkWFdpMPeqN0FWaL57iDDnSo5LxluA+pp
LxlkJRpCNZTTcP04k2FO9ZR22/oq1NMR4v0p3buzThdkivTkToacRvUrl70K
LUS8p8iwxl7aeMHpFAuRnnzIMEVV+/HYrXTUkz8Zdn71uGFxPxfne5UMKXu+
dk0tZqCebpDB3e1w+8CqIuS9QwYPj3b2lj13s0TzfUCGexZrrbdsnVg/MWRQ
IR98mp7GQl46MQ9dEP70LrUQ6YlLhnkPV5caLWEibywZisQctjQpFSPvUzLY
edhPP/PhbpZITylkkE/++UT2/BvkfUGG+vEicp76fZxvNhkyXYP6TjnloJ4K
yCAo2Gu89KUQecvIcEDi3oGZW1+inqrIoF7j6VCZl4i89WRgFwVJLL6eirzv
yRCXcXGb4e8UC5GeOslw/eRoRnxwCuqplwyPN9HmytxKxfl+I85Po+2pcs10
1NMQGS5NMUjwX56IvKPE+TgX1jJk/xr1JEaBtAPOcVa9DAuRnmQosPDtoT1a
Nfm4fiZTQGKTRMIW17uop+kUuP/ZsPvx5VLkVaNAeehzjrP6M5yvNgXyLvge
pthVoZ70KXDFY27+SMCLLBHvfAqwynJN3wXU4nyXUiCnaJVkASkH9bSaArwp
alH36HXIa0qBppDxSK+eXPRjKwpYJEm82b6tHnltKRDFkGIcTs9Gf9pKgdtq
Nft6kt6hnnZRINlxu0tI4HP0Y0cKZPqN/etZUoPzPUiBuAPRoZsaDqI/uVKA
/W2GHX9HOfqxBwXmGr1bA4uyUE/exPf5V775fS0H/fg8BWyWJ5skrqzE+V6i
wNfm6/oNbpfRn4Io0Pjy6eXJyo3Ie4sCjoH7TdRsX6Ge7lFAgV3dfWNHO+op
kgLO8wNjFu6sQF4yBa7fcriqldiNemJS4BDDyystqQp5+RRQdwwQz5TuQz3F
UYCyFPz+tdehHz+jwKO0G5Pr/vYh73MKnAuaa1p/sB796RXx+3x/z7n/rx/1
lEuBsc7OBdvtatCPiyjg3xoox+X2oZ4qKHBAkyVvr1+MflxLgZV/BWOr8yeu
P40Ev0PIrYuDTPSnDxTwVb/HmavbiXrqpkCBgc7B+VolON8+Cvj9savV39CM
ehogvj+Y9wm2tCHvLwrYH+t8cXOkGPU0RoEy5jShum8v8kpQYd0OaqOafjSu
HzkqPG1vlj+SOYB+rEgF0t2qpEbjSuRVocLePD+L74lDeL3ToIJn5ZfDRY31
6Mc6VDjIDTzkNukP8hpQ4fTLodthoW3ox4uooL3Oe7ihfBTXz3IqnN98ata2
HR3Ia0x83vGNeY7GGPqTORVK/m4Jas55h+tnHRXMFv24frNiHPW0iQocZT3t
y4kPcf1sp0KhTWHw9y3jyLuHCu2njiwkTWvB+e4jfl9neLa7wRjq6TAVooQa
jcte9yLvMSpU3GJcqwn5hXryosLNLcfjijYNIu9ZKoy7+/5YOvIN53uRCmSa
U7UCjKM/XaFCvAmlzl/pK66fYCpYzy+Y9fSQFObFECqwNzvdWxDXhnoKo4LM
zupCjfZJmI+jqZAzSbf72qt21BOVCvb75355mqqEeZFNhQXS720MH1fjfIVU
+HAsZvGv9SqYF+OpkLzmdewepYnrexIV+sfU45Y4zsC8mE6FW1/jj/mofUc9
ZVFhEtTwg6bPxHycT4WxhOfbP4ZKYF4socKmkiaDfSe1MB9XUuFbUl71vrBp
mBfrqCB7n/NY1Vkb83EzMe9fWeXsOTOQt50Kx9uWqHP7NCxF8+2hQv7p8zoR
s9QxL36hQqrW6r6hM9qYj39SoWWe0Hinnx7mxd9UqGpwvde4Rxfz8TgV8qLn
JfxWno+80jTw0pnsWnvFAPOxAg1CKOfnWjWtRt6pNCg1MepbV7wM56tKgxsW
HRWa6SbYP2bRAGjie3SDVyHvHBocebcowv+ADfYPQxp4fxor8chdj7xLaNB+
PNf1SPFO5F1JA9v4gOilGnsxH6+hQZ51dcBYiAvyWtLgkv0sKcGb0zhfGxo8
ifVcVm/lh/3DjgaL1IP6I24FIO9OGsx9/ME+6cRN7B8ONFge/Dv73pEYzMcH
aLBjcJVJqIcAeY/QoNxU8dnkfcmYj91pUFhqtlrD8SXyniI+P8WsLPdOFs7X
h5jHuTGZqqZM1JM/DfztBQk3/JORN5D4fFTdVfP7PJzvTRr8ijCyCUqOwr51
hwZX+95IdIpfQ94HNNjfs02Xk+uN/SOGBtG7v+760uaOvHQaKN7xjDrNO4Dz
5dLA85LdqpPSDqinRzRYkjLfJafGDnkTaLD1krwYh2uH802hweojmw56vbdG
Pb2gge608T6rP+uRN5v4fcOlEqdvmKCeCmjwqm59zKkBE+Qto0Gv76Hnny/N
x/lW02ClemL2s38rUE8NNCCXVtJe7piHvK0ET/j1PW03DXG+nTRwJjucXLtc
F/XUSwNXe7eRsGW6yPuN0Av94F/lVh3U0xChh1SrDZ7aasg7SgOlT25OiTla
OF9xOvysXZzbGKuEepKlQ78JZ9R1vxbyTqaDXcLXGntxOZzvdDo4K4qrXT2v
iXpSo0NJy9j2dTISyKtNhwtH9pVJ+6mjnvTpUNv0ZXFOdS9e3xfQIUzGaXTM
VgV5l9Ghyc9FhbG1GP3JiA5bPowGv7WejrymdEi1Vznr6NeD/mRFB41yxc3m
qYqoJ1s6nIpzYtbtb8brz1Y6/F78vdF2uRzqaRcdOjK0tppJ9OL13YngtU/s
aVeTQN5DdMh48FalZMeEP7nS4dGUENoc09/oxx50WCGRNzrsNYT+5E0Hc8vP
IAjtQz8+Twff8wqUBLHf6MeXiHnoug3XzWhCP75GB66V/uG1Xf/Qj2/T4XLS
+j35jWeR9z7x+ZaxMrvH//B6F0mHttOHo68J6rNEvGQ6CDlH7qhyxXC+TDrY
D2fkl8c1Yz7m0+GJk6vN0eP/8PrzmA6qJ5mkwJlt2GcT6TDkvTB53YdRzDNp
dFgoV3/NWL4V8/ErOsy6Ppi10uI35sVcOqg1TpeWk67CPFNEhwhzzvKGk4M4
3wo6pEdGem63zs4S6amWOL7icB+PgX7kbaLDNf8DrYNlOXi9a6NDNL+verNu
N17fu+lwWnn87vyt9cjbR4fIggURr9pq8Ho3QBzvZKbke4UOzIu/6ODeeTX/
TNtTnO8YHdZYZ6r6tvagniQZ4FJg1//sex7yyjPgrrjKuFFxH85XiQEhzdvX
X1OuxryowoALO1dZX7L8irwaDLj4r8Pro2095kUd4vU22erHk78irwEDTLhu
nzJuNCLvIgbEVuq53/LqQz2tYEBryMXZrfoNWSJeEwY8+WTI0z79CfVkTrzW
bJgxtLkqS6SndQxYHn07ckl0F/JuYkA1s1Hr1KN87LPbGdAYti3fQqoVefcw
ICPnhbArVIB5Zj8DMhc4SKZuq0U9uTBgT6dzYtDKDOQ9zoDtJn8OV3kV4Hy9
GEQ+rbzNflqC6+csA7izTx5Ps+VgnrnIgKJvZ6rmmNXg9f0KA0ZTsoLfnkzE
vBjMgOfZR7gjqvXIG8qAj/aFTiGyOZgXwxng+26xzJBYI/JGMyD89cI20sI3
mJ+oDFj3gXxuq0Mjrh82A+LeacakKb1BXiEDqvo7jNwf1mNejGeAs4/bPsXe
nCyRnpIZMKmr1mAZf4I3gwFbnT/Fy5akY//IYoDeDNtwal0l8uYzgFzVKfen
VID9o4QBlC+0Z+eVS1BPlQwI3cZ3ExheQt46BlzJzuR1TclDPbUwoNb48dwL
oY8wz3QwwMP73SzNsy9w/XxiwHCvWo6dSwrmxS8MqHh4OcS8MRn19JMBv5MO
BZ83Tsf5/mbAoTtbTe1GElFP4wywXatqpaaajrzSTAjwzBY/JJWC853EhJ5l
csprNibj+pnGhGP0IEOv6Rm4flSZsO7ObdX4W4/Qn2Yx4eeix3KygmzU0xwm
TDIjHaOuI6M/GTJhZs/xTg9yPuppCRMyhq+TKdd3Ie8qJkRIKC2r0S3E+a5l
wojL8OMV28IwHwMTPt7q+TpFpQh5bZjQ+N6lsuFKMPqTHRP6M3ROzkkrQN6d
TLD5m/1ZdzwceR2YsMi1YUnA7Dz0pwNMuFmqvrH6fSLyHmXCqMnUN2M/0nG+
J5iQX3EnTi03B/V0igncRSlgc4SJvD5MODdybuO+6jLUkz8TVGVn/BoZE6Ke
ApngMe3HM/HNtch7kwnZxaP/ZK5P6OkuEwSJSj7Kvk3IG8EEky4Hla+UYtRT
DBNCchIPU35+QD3RmSCWe0y8UPst8nKZ8ODX/ukl8yb86RET3EzaExZfrEQ/
TmDCPYXcNFJZB/KmMoG/zEry7cJK9KeXTDjrFVnk7diBvDlMOB55vYMhnLi/
WMCEtjA1pw+72lBPZUwYu0FXNzn2HP24mgm0JrmlQQMT17sGJtxt5OwPb8tG
PbUy4cry/KHS87Xox13EfK15HlMtJ/r7ZyaMNwUfqLTIRT19Y8Jrj0lvqodb
cb5DTOCZWvwyNQrF9TPKBApjj+DDiY8ivRSKsaB13U/FzVGFon6TLMmCL5fX
Jr7e14/nQ4YFr2Lf1VcuqxP5YZQ8C3QYcYLm399F/hQ4mQV+x2+afdFqwXkp
saDKf/XnPUt/4vFPZ4GaI+XHItcWkV9umcECBe1zO8pDBpFHjQW6KyqEYRoT
92s1WXBle8yunvRBkf7UtVnwMV77fcL5SvQnXRacf3JY9VTTD+TVY4Hj4QvP
24wzRX38owEL3l2bLrPt3nfR+aqaz4Jpc3NHi4+U4/wXseB+5CH3/A7MD8lL
WTD34d3TqZw2kX4YK4jjdQ1xFnv2AfWwmgVbwnd57rDtR14TFlSv/iNOD6oS
6dnTlAXtxq90T1X+Ql4LFtTZxwYFLcsVzX+LFQt4IUrdBzLHRX5tsp4FO5P/
dO/YfRP9yJYF0uc9zE91S2J+2Uzwqe3cu/8tXj+kt7IgSZPfcuOJNOa37Sxo
lH5YJ6VahfqyZ8FipbZ31/1kRPmoag8LHrAM6pvtK9GvHVlgfMkOZLfKY77b
z4Kz9aNjnPhc5D3IgohFB563vpMV5dNQFxbENaS8uX+pG/XoyoJ7J4WetRx5
UT73PM4CknlW7++wIdF6cvBgwarlI+ygbGnMvyeJ87V/cXS4s4QoP5t4s2Dc
e+ScwQV5UZ7VO0ecb7eIE/HkSch7ngWsc5daShon7s/7scDiy47z/VHTRPn6
ewAL1i9v17jpL4X58QoLzmTJrFoh1MD8GsQCWtTi1zUOiqK8nxnMgh32zef+
TdNF3lssMJQskczOnYz5MpQFAab8U3ruc5D3HgsSsqPKc+bJiubrG86Cl5J7
WnsXzsW8G8mCnxtHBi4lK4v6gcNDQr+qB5j7jBeI8ro1mQVS1fTJWh0amL9p
LJg9dSBYb/cS5GUSx5tJ1+hxWyDKe0ocFnS15ly+PNMYefksuBr9UZxduBz7
j5A43lOmRfQ2Y1G+b4kj9LldcqZ7vjnyxrPge2Zndk+qDfaTZyyQuNT+Zf98
O1H+jk0m9N+lc5WZsgt5nxP//9Tr3ZeZztiXMljgZKbxpyD8GPK+YkHJO1Ks
X4sv8r5mgeuFfaNG9X6Yt3NZsIi6sKHgQyDyvmHB24LYzaaTw0XzXVJE6OHl
A+qNFBb2q1IWBOUv8fhTEY+8FSy43fZoZJ9Cuqi//KlkQeaUqtvPNmYibw0L
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
L8hrxof7J26usH5Yj35syYf64X/2XIsB5LXmw5ajv9y6sibuL9rwoeyv/wEJ
y5/oTxsJXolt781VWpDXjg/JlTf85B0n7i9u4wN18fejziUTfryTD2++942X
bR5E3t18CG0Ll0rcX4b+5MAHCUZG3pF5P5B3H3H+uLt/V6yceJ76AB8uzZmT
S937Df3pMB+aVuyRG4qrRt6jfAg7pEzry+tBfzrGh7fDOpddGjuwv7vzIeK4
v2PKomb0Y09iftwKpnXEV/TjU3z4ocrLbLtVgn58hg+H18dlP/84gn3Whw+a
Kj4dA/Kp6E8X+MCdH6ZtbS+G+difD2I+xbO3zmKjH18m9Ebeqiy1UgrzYiAf
eu9ZPDxsXoS81/kgZ1pgoFAmjXnxJjGPKSMZfYuqkDeE+H6pkuaTB2UwP93l
g1+zTKlpdBn6cRihPzm26eJxOczHEXzQNjJ2XcAsRn+K4oPj5XsZnZtlMS/G
8GH/h3thKscm/h6GQvw+AfMppU0O8yKdmIfZriN9tr+Ql8WHpU+NpSyrpTAv
cgn9GPGdugMkMS8KiNcx5F6NM3KYjx/xIfvoHK+vsZMxLz4h1g+UtdqUSmA+
TuADa03P+mdzpiNvEh9yb3MO7ouRxP2eVGI9ChXzH67URN50Qn9iuYlnKFNw
v+clH5TWt+y5YqmLeTGTD6p/xRvjLSdjPs7mQ2XiibqHAXMwL+YRvKdnb/o5
XRbzcQEfaEUjfrdWzUXeYj4s5z+ysRlQxv2eMj6U6/ZMHdRcgLxv+TCY/mvD
LydN5K3mQ0qbquFHwyW43/OOD6U7DA7uGVyAvA18uPuIpkbrMcI+28yHMzed
nh2UWYH5uJUPC7vNJFqeGiNvOx9OKhZf+b7TAvNiFx+WjMw7Ocyc2N/q4cOX
s8eC9K7ZIW8vH36nHqkezN6F+z39fJDlqcob7XNG3m98iJE+d7O5+hj22R98
WPkhsBemnMf+PsQHGbdnSm+b/JB3hA8/1ToTlOWDsM+O8sFJKeFg6IZw7O//
+ODcapuS3sNCXnEBDBx2CivUeor5WEoAMmtTZW8tT0deWQE8vH9xw4G9mdhn
FQSgt6FHvXbNa+zvUwRg8EtQeGtJBvJOFUBjgMvAjyePsc8qC6B7k9Lv8650
7O8zBGD9WvXaNFoo8qoJYN2XVR98mRewv2sKwMRXbGOQlifyagsgqmX4y25p
V+yzugK46CIhrhDqiP1dXwB0M2/j1KX2yDtPANu2a5Rm2OJ8/RcIgGS4YK+3
/Abs74sF0PBpUO+Ohw3yLhOApEf780dXzbG/rxQA5bX+kcWhZshrJIC963w+
3p6yEPvsGgFcGdaVPGK9Cvu7mQDcGyOZ1Z4GyGspgLIFowt3Si7DPmslgINa
IXEBbmrY39cTx5tDzjk3YIi8tgLY/+WqqY0+/n1j5mYB5BZNvh53Zi7ybhXA
JDlKe/mniefPdwhAS3zgdHyfDvrTLgG8ci/02XVVHnn3CsDumH5dysAs9Ccn
AdRWt036s1EB+7uzAFoVixtoZarIe0gArp/Xdzh4TcE+e0QAe0b7OeYkReR1
E0CdJM1gQZUs8roT+vgrNVvOWxz9yVMAz+eFMq+dw7+f/H5SAIp2vk8XWo5i
fvIWgAdPt/dn+GTs7+cEYBsX/fCzVyf68XkBGB0m/fLKVsA+6ycAZf/INh+F
ieenLgngQrcW9yFXAXmvCmB1htmak5NK0Y+vCWDysURxj99yyHtDANrJ3Hsv
6ib+vuO2AKofxZ7NtsT9Uus7AvhxdPl0zdF69OP7AphuaNw7uE4S/ekB8f01
Df/kpj5HP44i9Bc6NZpzTQx5YwQwpdp+R8Hip+jHZAF47pM9+Fkdn19poQng
/NM3AQ7R+Pc7hUwBbH9NWbpi0Q/MixwBCKstFpcNdqIf8wUQmfvj88MZ2Lei
YgWg2TNcXiz7BfPiY2I9uKdI9bkXYD5+KoADK4MU+lx/YF5MFMDYQONM1UeP
kTdFAAWy3UPu84YwP6UJ4I2a+y7rS7WYF18IwP/c/RWsdUOYjzOJ7/fvW7Dv
9Xvss9nE+yuGnfxODWNezBVAm0Hq7d1D77EPvCHWc5ejYc3lQcyLRYT+hEGK
5RHvcX+rVAAnNnL2797wA/NThQA2uhp0r5tSh/s9VQLYkPbw8aajX5G3VgBF
Unqrf7OKsc/WE/qdbfwyIL4H83ET4U8PFza5DrqK8ozLewGYLYoIHvRowz7b
JoCja5cKr/sUIG+nAP6K5b2OTcb9iCUfBbBqw1K3iPBazIu9xPliGSm5seMw
H/cLoMb22MUTx99jfvoqgP7M/j1WG9MwLw4I4MMm897lLzqQd5A43tDRkbOf
ijEv/hIA/055nf2CLuT9I4B8w7euxz2rkXdMAPMmh1QFRnZhXhQTwrI+uV9t
TdXIKymEb6WCKz5SXZifZITQ+67Vc83eKny+Vl4IH2e9zpCNaUfeyUIQlpt7
qeuXYZ9VEoLFYq2XA/bvsb9PF8I99uvhode5ov0I9RlCMDNa3jiXWYf9XU0I
2ssqSNUa8fh8n4YQUqYKfi9e+xbzk5YQJJ7mBzzpZGNe1BFC9402Tw2JPLx/
rCeEwNJpVTurXmFeNBDC5jeF1vacZ7i/NV8IOi7fps+bU4C8i4Qglpsta5vh
g/l4qRASpSseBH4vQd4VQjAtrtXqt2ZhflothOgka9s8nYnnDUyEkHl8uwd3
jwB5TYXQ1fp16ztPfN5Rz0IIK+okpjTM4mB/txJCgnNQgv++YuRdL4SfB63e
rHl9D/v7BiFoRByXjdn1Bnk3CWH8ZSHbWewB5qctQpCVtLO5r4R/35i5XQi3
os2PLXwbi7z2QpALCrw12vcC/WmPELZQHi25Xod/fxjqKAQ3wUzXqOJU5N0v
hNqaXQUnbVKwzx4UwsaVESZJGdi3HFyIeTREUCvb8XlZa1fieLZ1tRwxe4H7
PceFEEtZm+G7Lx55PYQw9ZDqjVyVHOyzJ4WgdLU3wjAsAvOxtxBedcyYfdGr
wOJ/HPTWZQ==
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {2130.3, 0}, 
     PlotRange -> {{2130, 2190}, {-8.732648792341242*^-6, 
       0.12943872840082637`}}, DisplayFunction -> Identity, AspectRatio -> 
     0.6, Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {2130.3, 0}, AxesStyle -> Directive[
       GrayLevel[0], 
       Thickness[0.005], FontSize -> 14], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{2130, 2190}, {-8.732648792341242*^-6, 
       0.12943872840082637`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {{{2120, 
         FormBox["2120", TraditionalForm]}, {2130, 
         FormBox["2130", TraditionalForm]}, {2140, 
         FormBox["2140", TraditionalForm]}, {2150, 
         FormBox["2150", TraditionalForm]}, {2160, 
         FormBox["2160", TraditionalForm]}, {2170, 
         FormBox["2170", TraditionalForm]}, {2180, 
         FormBox["2180", TraditionalForm]}, {2190, 
         FormBox["2190", TraditionalForm]}, {2200, 
         FormBox["2200", TraditionalForm]}}, {{0., 
         FormBox["0.`", TraditionalForm]}, {0.02, 
         FormBox["0.02`", TraditionalForm]}, {0.04, 
         FormBox["0.04`", TraditionalForm]}, {0.06, 
         FormBox["0.06`", TraditionalForm]}, {0.08, 
         FormBox["0.08`", TraditionalForm]}, {0.1, 
         FormBox["0.1`", TraditionalForm]}, {0.12, 
         FormBox["0.12`", TraditionalForm]}, {0.14, 
         FormBox["0.14`", TraditionalForm]}, {0.16, 
         FormBox["0.16`", TraditionalForm]}}}, TicksStyle -> GrayLevel[0]}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"l105c-exp\"", "\"c.1\"", "\"c.2\"", "\"c.4\"", "\"c.5\"", "\"c.6\""},
       "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[0.036000000000000004`], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[0.036000000000000004`], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333]], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333]], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.8, 0.8], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.8, 0.8], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.8, 0.4, 0.4], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.8, 0.4, 0.4], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1., 0.1, 1.], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1., 0.1, 1.], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Thickness", "[", "0.004`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 
                    Rational[1, 3], 
                    Rational[1, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.2222222222222222, 
                    0.2222222222222222], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 1/3, 1/3]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 
                    Rational[1, 3], 
                    Rational[1, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 
                    Rational[1, 3], 
                    Rational[1, 3]], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Thickness", "[", "0.004`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.004`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.8, 0.8], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.5333333333333334, 0.5333333333333334], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0.8, 0.8]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.8, 0.8]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.8, 0.8], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.004`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8, 0.4, 0.4], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5333333333333334, 0.2666666666666667, 
                    0.2666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.8, 0.4, 0.4]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8, 0.4, 0.4]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.8, 0.4, 0.4], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.004`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0.1, 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666667, 0.06666666666666668, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1., 0.1, 1.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0.1, 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 0.1, 1.], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.004`", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.739295921668127*^9, 3.73929603037576*^9}, {
   3.739296924791065*^9, 3.739296939714411*^9}, 3.7392969941732903`*^9, 
   3.739297103974003*^9, 3.739297170396213*^9, 3.739297682725359*^9, 
   3.739297717057458*^9, 3.739297778311508*^9, {3.739297861943371*^9, 
   3.739297982605835*^9}, {3.73929802895833*^9, 3.7392981764145393`*^9}, {
   3.739298212188097*^9, 3.7392982946006203`*^9}, 3.739298339494357*^9, {
   3.7392984744342327`*^9, 3.739298499115645*^9}, 3.739298727371044*^9, {
   3.739298785911098*^9, 3.739298848861277*^9}, {3.739298937282048*^9, 
   3.739298962173706*^9}, {3.7393156952614193`*^9, 3.739315723410222*^9}, 
   3.73931585480485*^9, {3.739315888660163*^9, 3.739315892083048*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "m109cExpLSNorm", ",", "m109cC2LSNorm", ",", "m109cC3LSNorm", ",", 
      "m109cC4LSNorm", ",", "m109cC5LSNorm", ",", "m109cC6LSNorm"}], "}"}], 
    ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2130", ",", "2190"}], "}"}], ",", "All"}], "}"}]}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Black", ",", 
         RowBox[{"Thickness", "[", "0.004", "]"}], ",", "Dashed"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "[", "Green", "]"}], ",", 
         RowBox[{"Thickness", "[", "0.004", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Lighter", "[", 
          RowBox[{"Blue", ",", "0.2"}], "]"}], ",", 
         RowBox[{"Thickness", "[", "0.004", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "[", 
          RowBox[{"Cyan", ",", "0.2"}], "]"}], ",", 
         RowBox[{"Thickness", "[", "0.004", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "[", 
          RowBox[{"Pink", ",", "0.2"}], "]"}], ",", 
         RowBox[{"Thickness", "[", "0.004", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Lighter", "[", 
          RowBox[{"Magenta", ",", "0.1"}], "]"}], ",", 
         RowBox[{"Thickness", "[", "0.004", "]"}]}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<m109c-exp\>\"", ",", "\"\<c.2\>\"", ",", "\"\<c.3\>\"", ",", 
       "\"\<c.4\>\"", ",", "\"\<c.5\>\"", ",", "\"\<c.6\>\""}], "}"}]}], ",", 
    
    RowBox[{"Ticks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{"i", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2120", ",", "2200", ",", "10"}], "}"}]}], "]"}], 
       ",", 
       RowBox[{"Table", "[", 
        RowBox[{"j", ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "0.12", ",", "0.02"}], "}"}]}], "]"}]}],
       "}"}]}], ",", 
    RowBox[{"TicksStyle", "\[Rule]", " ", "Black"}], ",", 
    RowBox[{"AxesStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", 
       RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
       RowBox[{"FontSize", "\[Rule]", " ", "14"}]}], "]"}]}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "0.6"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{
  3.739295616992375*^9, {3.7392958524357243`*^9, 3.7392958882239733`*^9}, {
   3.73929593407476*^9, 3.739296010101408*^9}, {3.7392977401831303`*^9, 
   3.739297776794456*^9}, {3.7392978267359047`*^9, 3.739298202385062*^9}, {
   3.7392982329972067`*^9, 3.739298350732132*^9}, {3.739298450235526*^9, 
   3.73929854232933*^9}, {3.739298880942786*^9, 3.7392988961612463`*^9}, {
   3.7392989431563187`*^9, 3.739298968583926*^9}, {3.739315999057865*^9, 
   3.7393160141632977`*^9}, {3.739316115228072*^9, 3.7393161389149942`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.004], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], 
         Thickness[0.004]], 
        LineBox[CompressedData["
1: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
smDNGoVV+a0teHyTWXDsUXzfnoJm4d9LmMKCG1wNjY1ZbcI8nZ7Kgi1vP/bP
VGnDeimw4OKXR05717fj8SuzoLngxMOjie3C4/FQZcHAXXDlaojmR3UWTLGc
+7PE+jvWcxYLHvx+RL4/3inMn4YWC1x/1F96IN+N9dVlwbyx6/KFDt3Iq8+C
EIdn6kfKe4X56DAieIb1pfpc+4Tnq2oOC+YofKLU+fVj/c1YsPL6vFMN9v3I
O58F8SmkmKtpv4X5YViwINkzqOfqxADmYTELDvPnl6kWDyGvNQusx0sVU98N
CvO835YFKp4brBt0R5DXngXBpW9XLR4ZQl5HFmj150Xf/DQqzJu1MwtcEg3O
K8j8RV5XFlhOykoQpI3j+XRngZh2qXFG0T9h/ietZkHjD//pGgIx9Le1xOeL
x8/5fxBDn1rPgujfWqGMKnGhL1RtYkHildMnIsYkcP33ZkH/jZ1ja5ZLod/5
skDQvUMpKWeS0F8Y21jgeOLPEYuZ6BNX/FlgZ1SRptMgg36wiwVzAw9Gxx6Z
IvSL/XuIz9ftmpPSIif0G699LMg48TrSxUEOffAAC9wlbjNa5fF+unUoCw48
OTTmN6Yo9A/9MBYEOrRJLwpXRp84woK6AJsfM+RF9+ePscDC++3euzIqQh/6
eZwFT2xMVsQkqyDvKRYY+26PLdKYgT53hgWHcipOmWfi/Jh1njhfR9P8eSGi
/YNLLFg27mUzpKqJfnmFBb9Om8/WvqyDvNdZYN/M9Sh9ryusb8QNIh/iL69f
DNNH/4tnwSOrapfRIQPkvcMC+euhMk+7cH9kOZkFq2KOKercN0YfpRE8hVJz
rnjPQV4mC5Z0FXWles4T+p4ChwUrNH6fFru3AHn5xPFafXJuibZAf0tiwTht
pk5/8SKhjzXdJ/J5x2HOkXM2yJvMgo2/3Ra6di5Dn3zMggsXJ36tdwahH959
yoIOp5jvPn8dkTedBbv9M20vPXdBv33JAimvWdkvLrsjbyZx/XKSnz97sRZ5
c1hAmkjUmv9nPfpnPnH9jzy0tvzkjbyvWXB2U5jZjMEdwvqav2HBrmlFTkal
e9CHy1jwdL3NzIR9OC8pVLJgg7lxQn1IlDBPo+9YUJpsunSV5AXkrWZBhNkP
X1r9LeStZUHV4jSuxh2WME/FDSxYlHfojeGRe8jbxIJK30vp48xU9NlmFgwa
Kc50PJouzFNCGwtSrDtmFJa8QN6vxPWlKlMY7Z6Ofv2d6C9NV1+eckoV5sm/
mwUL9Tl/1969i7y9LJCe/fnj2cdM9N9+FrCjVrO9q+OR9zcLnD3IEy/ZuN+o
McwC8t1ZDwrHTqCPj7KAZjG67LNZOPKOsUCcdPrtOrMDwvp2TBD52n8m5/eV
XTgfSLDhnuOi9Qzb7cg7iQ22V38YmhV6C/P0VIYNLx2ODpU3ivYb5djQsiQy
8q3KWpwfprHhUNOzD+WR7sI8nVYi3h+ZU7AiygV5VdjwTXwscJatE/r9DDY4
VrE0L0o4CvPkMZMN1ssELzLe2CHvbDZYnDybqxRpg/OGDhtS5a+dGcm0Ql59
Nghk71YI7BYJ6zvJiA1pGeOZr6gLsT+ZsOH8gzD1pZT5yDuXDQeLFZ70G5lh
fzIn+Fwy08ra52B/WsgGYNIfrOk2Qt5FbGAM37q9U9wI+9MSNlzXGFTaHK6P
vEvZsKqP9G1Pmx72Jzs21O4i647O0sX+BGxon7BSp9F0kNeJDe+s6taWGM/G
/rSCDfTabxvHQzWxP7mx4fIZDac9RhrI60H8/fyOk8vfzMD+tJYNZ0MUyQ+u
qyLvejYkhvflm15WQd6NbNh89vGtKdunY3/yYoNcCjOY0aeMvFvYsNH1VbhR
Gc6PWVvZMFDCdc2JVMT+tIMNZuIHZY0dFZE3gA0LGJp53PBp2J8C2VBi0shs
VJiKvEFs0JS5ap44LIO8wWxgJskk7r0ug/0phKj/zzU6xQWTkfcwG/Za7vWw
dpPB/hTBhqefpukWSuF+o/5RNqjV3GuX/y6FvMfZMHp9i0bGoGj/8BSRJ+4B
UlCkJPbj02wIajQf2NwrWn/OsWFFVvu84mAJ7E8X2XCTSWOqscWQN4YN87pp
ayhLxbA/XWMDRf14zOvVov3GODbYNfM0r3j8E67vV26xIaY5LmL54VHh+h5x
mw11NpplTpv+oP+RiDyIH72pOWdE6HNeVDZ0/1HODc4cFq7vyxls+F195U3L
8yH0UTYbdDXqRrxdBtEPeWx4pnWYUdv4W7i+KySxIfrQY7G1baL7x/eJ89Hx
1jCO9At99SEbXuztWzKm9VO4vjc9Iq43XY9MlZyf6FdP2PBjk+7aFn4v+mQa
G+bL0+fFzfwpXN/vvmDDl9RJSlmF3ehPGWxoOm7Gte3tQb/NZoMV96bBet/v
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

         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.2, 1.], 
         Thickness[0.004]], 
        LineBox[CompressedData["
1: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
d/VGC/L0oJUBhj+1xMtvhyFvO//5bSWY3tYPQb/uYkBMulWVn9NpQZ68evj9
oGH4nEPbYeT9xYC+I99vX1I5gL4/wIA7Ys1MDdc9yDvMgI9UtZWSR3G/UXWE
n8+rH2dv6nbB+W6Mf/+M1L/kDTkh7wT//SIdlRY7bxDUt2OKAWZnlywz87bD
+UCMCSqu5Von5tgirwQT7vffC7yoYi3IU8oMJni6eN2q2SDcb5Rhwrmfs0xW
iqzC+WE2E7Ru9lwhfDIV5ClkDhNs3901frloOfIq8F9Pv427324p9idlJiiP
rJYt+r4I+5MaE0aMaxekmRoh7wImSIeabmRF6WN/0mTCR9sMxep6PeTVYcKz
hujQwpO62J/0mPDaeHgBJVMH+5MBE8wM91aEz9ZC3kVMiHf1eZ40UxP702Im
/NS5uXb6/31etIwJtedubq3zno+8Zkzo9vHfe2ybKvanVUxIuHN8Q5GfCvKu
YcIoy225TJoi9icrJqyjJ9fPtVHE/gRMsKpldX8ol0fedUz4FTxbQb55Lvan
9UwI3pLuOK1rDvYnRyY4Gr58r58gh7ybmWCYxaQRrWZjf3JmwpEKc1mHVJwP
JVyZYK9asy7+tgzybmPCP6PlfbsPS2F/cue/33b4rd8thby7mDBvzaw9Tqun
Y3/ay4SIz8qrOOGS2J/2M2F7sXuomqs48h7g/3+R5pGNURLYn3yZcCnk4Whf
nhjy+vPvn6N4aXy+GPIeZYJcoZLL2lER7E/HmdDu6VtzNF4UeYOYwAo2EnUz
mEI/O82ETpE/IyXPcb9R5ywTjs2+bnOfOo4+cYEJD63c4osouN6JXObf32Lx
W0GdY4L1vT+ECW8PXWVW2Y6h31xngkEKOSWk6y/6xk0mGJ1YdUP60ohgfc8K
ZwLZI3drf8Qfwfr+OJIJNd4lS1zyhfuNd5mwtmzr29a7w4L1PSKaX5+qoeih
+EHB+n76IRMWtWsfXnBaOC8S/qvXwrDlQf0Cn3MnM2Gh881dZ6IHBOv7Whr/
3xXLW35o9iEvkwkpwXvkZH70ox9ymCBhu3/y1bRewfouG8eE1TF1z9v3/UTe
eP7zRnLb37HvB/rqUybMurZROTO/W+AzjUlM8DGSaxuS6EDeZCZETW5PcqZ2
oE++4udlQOres6hW5E1jwvMTug93zW5Df8rgP79Wky8uDbSg32YzoY7T7b2v
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
9f8AplFGrQ==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         RGBColor[0., 0.8, 0.8], 
         Thickness[0.004]], 
        LineBox[CompressedData["
1:eJwtm3k4VW0Xh1EylJIopJE0SEIhGRalRKOSREU0SqVIoVKapPJG5czzkJKi
ojLPETJPmZJZyiwk3/7Ocv7p6rqOffa99m+v517n2WfJ0XN2xyTEiNdUMTHR
v/9/nY8Af6u04fqUN+b+itFbv/tEgD77w5nlqZHmi2537fngHwGynLD+gMM8
cwqZeN2IgIcaZKsnlxjm/3+7390IoJxVF297E27+YSHxBw8j4EBmf8LZNffN
9f//Co+A12vUGsj+QeaV3POmsuQIWE2pEw7zA8zt/v8HjAjoL/dYTZbzMi/I
J168CMiL8L8l/9Pd3MtUtpL7IgLmz/nwOjrYxfznHuIP3kRAl9bGw0JVR/Pj
/3/FRcDzZw/3PauzN5f9/wckRoDXpjk8A6Gd+f9Pf2F6BAxJvpL7cnWX+Urn
0PTBnAhItB6ML9KzNucRp1NZEAEZBUYvbOStkLc0AnwHb5hOLQfzjMEVzqHV
EfCUfkNSzsbE/P+nc74hAvR+zw4J3m2EvC0R0Gh8NqlvuqH5/w+/oisC0tri
Fp7NXIe8vRFwxCalwlJsHdZ3KAL2l2j37X6rZz5EHD79L/H521eK/c7RRV4J
EgQ2V53zV9bG+kqTYMFizZ/JGcvN/39455kkELqur5L7swx5FUngfFkybsO1
Zeb/f7uiKgmS5BTbGn9pIO8iEhzocllJL1qC9V1GgjWVeTJNYkvNrYm3R2uR
4GdpCn9a7iLk1SVBSpBEwsURNayvIQm0kzKVD+XOM///27eakiDsUS5zQ+08
5N1EgmAh78KigTnmojxtIz7/Ue1NUFZC3p0kOHtvVGH7mDzWdx8JPEoHOT4z
52CeDpIgdupHbpqzAvK6kGDb+HnPbqYC1vc48XnZg1Xc63KYpzMkcNrd2KAf
MwN5L5DgiopK50WeDObJlwQuV1s4Zs7TkfcqCVyXuzxZc00a6xtE1HPF72IH
CxnMUzAJXvrJthRqSSNvKAke/1ORsSiaivV9SoK0+z5n/3ZNwTxRSfCG+ify
ZKM48rJJkOxFfdqnLYF5EpDgh/hfhVEnMeSNIsFp//+eDYaJI28s8f6N96pO
VI2ZifL0gQS7NulGubtNmIl4k0lwbtvZ0i23R8xE9c0kQdkXrhLda9xMlKc8
Ehz6m6lVUjtkJuL9SoK3u7mvPd+PmonyVE6Ck98TWAefDpqJeL8R/zdz/+/t
0REzEe93EvT/EXfavWHATJSnNhJ86E+JbfQZNBPxdhPXZ9xaV256r5movv0k
kOxZNvBuyoCZKE9/iHqXPevW8eo1E/H+I8EN9SCxUP8eM1GeppKhKfb4gQuM
n2aiPMmSIdybVsx16kReeTI8e9K+R7i3y0yUp7lksDGqjn4d3Y68amS4+iA/
zfRvu5movkvJYCVhpvEyutlMlKflZDByzZ5I/dSBvNpkUPpPcrD/3w8zUX31
yXBI3TrJorvVTJSnDWRQsLN1I3U2IK85GdxK9n1XdPphJsqTFRkcYqXyV4x9
Q15bMuj4L8tew2nC+u4mA8eeZKp8osZMlKf9ZPjXauNjmduIvM5kGPDaWa0q
XY31PUqGr2LDJkELGsxEeTpJBs0L9rBvTwXyniWDpMGbkX+5VWaiPHmTYZ9k
e5z/7TLk9SODnkFCjMz1CqzvdTK8X/TCgJFcaibK020yPCq6m/1ypBh5Q8iw
eOBSqMCgBOv7mAzej+MaIi8WYZ4iyHD4YtHmBc7FyEsnw8bCbzZFOfmYJy4Z
Go+seWfRV4S8z8nAZDPfXFjxGXmjydBGd6p0/5qPeXpHhuehpy/u+JWJvJ/I
wM4edvjpkYf1TSWuL/VR2wndTMxTNhnirMpC0txykTefDDR7cuqO8xmYp2Iy
PLlYsWIJLQt5K4l6dCbM9YhJQ946MrxYalViVZqOefpBhhXs0NutdWnI20GG
wvK/1VEOaVjf32RYlNI8LLUzDfM0SIZf11NyH1GTkXeMDLpJhr61kamYJzEK
dLuXyNftS8Q8TaMAR2NT9/e8ZOSdQYFNTj/2U0gJmCcFClyt/Glj4peEvMoU
CKgZSdM+noj1XUgBJ7d5vXvWJWCeNCiQN3t+C/NkMvKupMC0+a35D1w+Yn11
KFBwUeC851Eq5mk9BVYnD3rI6Mcj70YKJMh5WqnvTMc8WVDg1caiZsaWOOTd
SgEo8jq57VcG1ncHBUJsr0Qd2Pwe87SXAjaPC9/WU7OQ9wAFvH2UFpWVxWF9
D1OgI+DW5jMbcjBP7hTI/pTBfHDlI/KepoDJ6jiye3wO5uk8BcR65HUiL6Qg
7yUKbBaP1vprkov1DaBAbwN7Qm9VBubpBgXE11VphrzNRd67FPhoL6ulRM/B
+j6kQP07sqd7Xy7mKZwCPL/mhtPShchLpoDGWq3bByS/YJ6YFFDLCVIOqihC
Xj4FPDv6r6w1+4z1fUEBh/So47425ZinNxSwfWw7cfxVAfLGUcCeE7evS7Ua
65tIAcWvsc9VvxdintIpoJ+ZQj5yvBZ5P1Ng+Inj3F+OJZinQgr4iX+3F+M2
Im8ZBQRVEXt+RZcjbzUFUsxTgkhHmjBPDRRgLfzdJaipRt4WCky59ORUWl8T
1reLAm6X+lN6r3zDPPVSwN2pa83+B83IO0zk4cSjovH1PzBP40Q9j1F/33Fu
Q14JKvRrGfuGlbcgrzQVXk03O7dLqh3zNJMKc7rV78106UBeRSp4aF0e8E5u
x/qqUuH5p5kno7q6MU+LqWDJWulsU96FvJpUuNurNn93Tw/maTUVJLvVLzmJ
/8Q86VKBabDId0fwAPIaUiEudprZ9epezJMpFXwUsmR1ng8j7yYqlHtviBqc
3Yf13UaFIzenW5CujGCedlFB5f3C9zPfDyKvPRVIuT83GriPY30PUqHtctGO
t6w/mCcXKvyLlh54FjKOvMepEBak1avT/gfzdIYKU1oXndovLYbr+wUq1MuF
gY7lP6zvZSrQtzWv928Wx/X9GhVujOVZWLdOru+3qKB8u0024uhUXN+DqfDV
i5coTpLE9T2UqFesmmdhoSSu70+J9/u9/KpVLY2+SKVCcOrr1C+zpNFn2FT4
eO764LG46ehPQuL8mq8MNpfKoC++Io5/5UReesks9JlYKgjUZc9tqJmFvviB
CjOOnnp80X0O+kwyFep8FtF8CL8S8WZSoXO3/0zKGiX0xTwqzJRJWD5irIQ+
U0Qcr9H8bpblfPSnCipc1PhrummRCvriNyo0nIq3Dv2jhrzfqbAsYTc9Y0wN
fbGNCqVaKlnko4vRF7uJ89nnmbtty2Lk7afCt9LsXy5xS9EXR6iw45bwhkeI
BvJOUOFPxyyrHqOVyCtJg5HZLdZxEqvRF2Vp4L9ulP7PWht55WlgEpi4493y
tVjfuTRIN1e1ne2gh76oRoObFvNXB0SuR96lNFgqdlx3bZEh+uIKGgS+nau5
P2gj8q6hgXO8bMWt3abIq0+Dk503ZCLnWaAvbqCBrEJY2b/Nm5DXnAYfCx2f
2spZY32taDDHKaf4WtR2zJMtDfZWmp1ImWKHvHtoYMB+/VGtfx/myYEGdWTd
D7/bD2KeDtFAb5WFWH7+UeQ9SgOvk/sfvwryxDydpEGnlfXSgwbeyHuWBnmb
K1rIz65hfb1p4JksEU9few/z5EcDrYl/QvbzcOQNpEGT33gS/wsd63uHBoIu
/w4jUx7mKYQGH3KGzq0jvUTexzRY0MFueXwlBvMUQZzPjrArsRCLvHQa3F+z
IWZFbizWl0uDDoaDzYBZLOYpkgYWIyfnbPB5hbyvaTCQueP43jgB1vcdDU5J
qVs9/8nGPH2igctLK4YXh4S8qTSYd2RlwJcHoZinbBrMeno62tbyDvLm08B3
wEbGeigQ61tCg28CnZzM8EuYpyoaSPWvrrtOPoW89TT4c+nHFZXzk/X9QQPJ
5b9O33zljHnqoEF+aMqs6FkOyPubBg8Xv1kZvX0f5mmQBmVXY5LFzfYg7xgN
Qgd5WwJv2GJ9xelA7j/x1vPoFsyTFB1c/4W33O+zRN4ZdAC/q5sL3phhfRXo
sNs8rPtf3AbMkzIdqmLCPhgNGiLvQjp82ORcnXNxPeZJgw7HIkKCndLWIe8q
Onxacv3F4So95F1Lhymphcp23/QwTwZ0ELd/0W2cooO8G+lwJ5xKbs1ahfW1
oENxzO5urZhlmKetdBDukQz0O6GJvDvooOdqdPBcgQbmaS8dnOYOZ71pU0de
RzoUMX2bOepLkPcIHRZlDjs4xyzBPLnTIW9XosvCwAXIe5oOP6ed8yLHqGJ9
z9MhwCVtYYXbPMzTJTpEzO4bfz+qhLwBdFAWtPdn3lXEPN0k6pdUaDvWpYB5
ukeHj4YGvgH1s5H3ER127tQ/VBykgHkKp4OH5Xj0zX1zkJdMh7qaQPF/v2Zh
fZnE+39JPTfZOxPzxKfD/fSxXI/VMsj7kg4hOeuU3p6agfWNoYPCNU3F8DXS
mKd4OjiQTwZHHZZF3kQ6hM/Wnt55RgrzlE6HPweHd3qqTc6Xn+lgdmPn0u8P
JLC+hXSoNQh8ffPYVMxTGR0kDrcsG+eJIW8NHfYn3g6W2y6B9W2kw22oEjia
iWGeWujwzrXwRbWrGPJ20UFDdmvKQY+/uN710kHmnfzep6rjuL4P08E4KqBT
Y+sYru/jxPltC8uVkBrF9X0KAyIMtnyZqj45X8ow4K18EVtv7zCu77MYkDkt
RS6V9AfXd0UGGLb3/2uiDOL6rkq83+TchtNnhnB9X8wAL/WIhRNWvbi+azLg
tZ9b/mnjyflyNQPOTK//uGtdL67vegxYw927wvBLH67vRgyY+9g7KvdnJ67v
pgx41/PHIqHlF67vmxiw59LAWm+NNuTdxgDxaNLHkCfduL7vYsCQvK5bWn0L
8toz4J95M0d2dgfyOjHATcH3vZh0C/qiKwPOWd0dtRfvQN4TDJihPWMbZ+AH
+tMZgvdOo+Vsv2b0xQsM6OmeXrzhdyPyXmZAIGnG+7qoRvTFawxYbjI+oRfZ
iD5ziwGJhp9r79Lrkfc+A2TtqQqfvjagL/7HgNj4iG9XkmqQ9ykDZu78deiB
egPWl8qAkuBih7rXleiLbAbUT6/ROiKoQV4h8fcz8uZqy5VifV8xwDL5pm7P
rGr0mbcM+K/0Vhuvshh5PzJAI3LbNVu5CvTFZAZ0NthfywwrQN5MBjxfKaR0
7yrD+uYx4EtPcxQvLx/zVMQAIx1PTn1NMfJWMAAkpQqDNuRjfWsZMDs9c+6W
918xT00MsFvoqypw/4y87QygfJ329kJXLuapmwFW8v/cVprkIG8/A05Wbn7l
MZSN9R1hgEdwP32aIAfzNMGAUw3HJla4ZyGvJBPqA0Nyd1RnYX2nM8G3oSv8
95x0zNNsJvTxuwyKYibny7lMkK4JrTzQlop5UmMCKaCjVas1HXmXMqExfEng
WfdUrO8KJgjsXOf7fU3FPK1hwqoun1uvYlOQdx0T/pXc2TDbMBnra8yEJSSP
2tEFKZgnYELRGtv5v899Ql4rJnhIr1g3XTUV82TLhKMzdQ3lAj4g7x4m6CTu
kY87l4q8Dkw4HLJ0t7dOPObpEBO8mpK899anIq8bE2jemvEbfeOxvqeY8Ljh
gcLe3FTM01kmrAm6V9A68QF5vZnwm7egZjghFfPkxwS/e7avEncmIm8gE/Tz
mmXWVaYg7x0mfIwqoN81T8U8PWBClkFhYUTHJG8YE1x8W6O9j0zWN4IJj9au
/nL2ZxLmic6Eb8eHwNEqG3m5THgt38bsrU/EPEUyoXLT1ZDU1jzM02sm2C+g
rffKSELe90x4ceL0M7UHhZinBOJ6frp//1pBCvKmMWGudNvTOWNFWN9sJizu
kVnHcU3HPOUz4dYFikWRcSnyljDh7kio+MHpWVjfKqJ+qz9/eP6+BPNUT9Qr
1Y/B/vEZeZuZsGOLuU6LVAXmqZMJy3Se9ngVFiHvb6JejKebTdIqsL6DTKDH
bfaUXzJ5/4wxgc3fypm6qEqUlxwxFriysoNrF9aIrt/bKSyYcWi+rJ9VDZ7f
NBaMOfg8TfVqEH3eExkWxDuGHZ6iUivKU+AMFlRSh0v7NjVhvWaxwNOYt0C7
sgbPX4EFtWlDo/rrmkXns12JBRplbRUXrBqRR5kF9afFBMGCDqznfBZwrV8/
Hp/ZJMqfykIW7CEl6Xx61oX1XcKCwGuUDyuGfiCvOgss//pYJJR1i/LRqsmC
E/OPuz/zaBVdr+KVLCBd+uC1trQH67+aBX17OnfmfulEXh0WXNJOGPVY0yvK
D0OPBfbjfzJSR35hHtazoOm/ja0P0waQ14gFR03Xts5u6xfl2WMjC+gxLfzk
c4PIa8aCNxK7ts3ZO4i8FiyIG/I6POo9LMqb0WYWHCvNIHVajyLvVhZEDey3
4E4bxetpw4J1ZS2Ork1/RfmX3MGCoCUnOpze/kHeXSzoT/7wT11pAvNlx4Lr
plct3LX/Iq89C76NcP0DjSRw/T/Agi/2q0+KTxVDv3NiQajxEVqBnKTIXxiH
WXB7/0/VAo0pIp+470rwcGYfmPNKCv3AnQVf54d8XLJBUuQXHidYsKrt3fIc
jqxovXc4zYKVenMMF1ZLoQ96Evylhv+lcmeIfMfoPAvIr9v2Q4usyD/UL7JA
M/JiWSBNHn3iEgsibuRnjB2c9KcrLJjny7aWvKUg8qEef6LeOZIjCTEK6I/X
WOButWHNDXkl9LkbLGgnaR63fqUs8pWkWyz472PkK6epqsh7lwUXinhtmefn
o1/eZ8F71toLfopqyPuQBUklri/jFi0W+YzPfywwKdu63/HvQvS/cBYwJW+u
ct63FHmfsWC+Usp9nfNLRfW1JLPg4Yurt7hdy9FHaSy42743+2n+SuRlsiAx
69bnpT+1Rb43i8MCvdkVSXeMtJGXzwKB2J36qiJd9DchkWetLT9nH9MX+Vjt
Cxb8OqrOCTxsiLyvWHDKtLpHcvEG9Mk3LLB93q73sttE5IfP37JgUXH/G/eV
5sgbx4JsifLmIENL9NuPLIj2mp8S5muFvIkscHQ+MEDVs0HeFBbYDZz4VrFp
N/pnOgve7rPVm7dlL/JmsaDgcLAE76uDqL5rPrNAu2jzM171YfThLyzo8Ewc
a1M+ibyFLHAOUGs6u8NLlKfRIhac1dk1ovb6MvKWEvnLGXRWNQpC3goWpF/7
2rpaOlSUp5xqFry8vD4nVDg5j9WyYPfpnoCq/9josw0seLU82NrgqVCUpydN
LDgi0ZDR2vYaeVuI++FMfcEPjVj063YWPPtpkOd7JlaUJ9cuFlh0927UaYtF
3l8Ef+MDD7PoN+i/vSy4eFk6Io8ZibwDLCi1kfITWuN+o8ow0T8WnR4uNmeg
j4+ywM9ny4t7d8KR9y9x/1oJL5tOuS+qb+sEC4bS00/dcgtCX5Zgg+LTaMf1
5wKQV5INZgufuqbUnRfl6a00Gz5zDWVUCib3G6ez4SFj1E/ikgvODzPZIHMx
3mtw4oAoT4Gz2XCrfsdGw2J75FVkQ4eKa8trkh36/Tw2PP5iei/LaZcoT9tV
2TCljmqZoGqNvAvYcNrQeIqVmBXOG4vZ4Hr61+ycDEBedTZs15Yo3alrIqqv
pCYb/HcmuLjbGOE8sIIN77JW3WoYN0BeLTbcCVtqcz1jnai+xWvYECRnZM4e
0Mf+pMsGh7ZZyxzj9JB3HRu0FBtPb4zXxf5kyAZaodmMTVPx/gk1Jv5+C8NL
S7gc+5MpcT4Xt37eJqaJ/QnYIHXCwFr34jLk3cQGMZXrRyO7NbA/bWFDw/15
JytTlmB/2saGL1rV1aekliLvdjaMlmpldAgWYX/axYa6uoPP4n+rIa8dG2zy
0tgH4+ch7z42xKzZva+jYh72Jwc26NMlrvX+nIO8B9lAUftiuUMev99KOsSG
n5wvwRFD8tifXNig8iQm9Y38HOR1Y0Pxnxz1MDcF7E/H2ZA/9nCiMGRy//EU
G2rn67pOCZRD3jNsiNXbd8ExdAb2p3Ns6PawWxWeLIO8F9jAcZLf+dl0OvYn
H4LHsvabQhjOg+qX2SCR8lg/e5UM8vqzIUItPrjIUBr70zU2FCgrzjeJmor9
OJAN6pn1Tj3jU5A3iA3f+2u1r2SLY3+6wwaNH1Wn6CYSyBvMhs4YJf+pO8Sw
Pz1gg8Ehl7OxEZP7jaFE/R5wFb8ljonW9/thbEiIsHGleEyI1jufp2xQNWIe
M/MbQf8jEdfP5d2pCo9xkc85UNmwR7jswvqaIdH6bslgQ9eWxukGkaPoo2zi
/lijnfSXNYh+yGPDvihuF3XHiGh9nyVkg+QDPeOLVri+i70g7q86ktNxYv0W
9acoNiwJXcQKVO8Vre+1r9mwegM54klXP/pVLHE9++XeF97sRZ98zwbS9pHK
kw49ovX9+Qc2PCnVSDmT/RP9KYENT5d11Wkt7US/TWbD3ryySvadLuRNY0Nm
yZ5MgW+7aH13zSTqMSD1kK/agf6Zwwbr42e8/R41I28eG9Ienz/Or+4Q+d2a
AjZwE81eS9T9QN4iop/8uJeQMdSK/lTKBvr1AYfYlAaRb46Ws8EiXFKV4/QD
eavYcLs0fcP88W/oy9/YkPhcZk8FqQl9sZ4NlyiuaZqXapD3Oxvu6RgpJsQ1
oi82E3m9eDTUSLsaeduI6/NFcNu2vR55O4n7zfF7SqpXBfpiNxt6BuIl9MKq
kLeHDSe9d7kz4srQn/rZEFBtvrDEugJ9cYgNV5TqZ7FbSpF3hA2OEVWHAjJx
v1HlLxuSdnWffXa0BHkn2DD9pcGp6dZFyCvOgS1hR8cPXylGX5zKAXljjyVV
ofnIK8UBSUkJz/cSxeiLshzQn7P/ffefHPRFOQ6Qk856ZtdP7jfKc4A9Q6l3
oi4TfXEOB75lOJ1bcToPfXEuB+KcPN5FGWUirwoHDI3v6Hyzy0VfVOPAYLzH
hTV+Gci7iAPHb3PoS25koS8u5YCx4so/19Mn9wuXEefXYVU2mJiOvCs4YGqa
oJz9Ow19UYsD0zxrJ9o2p6EvanOgRa9xlLkvDXnXcmAg00Rx7GEy+qI+B3Jr
34eLC1KR14ADv+tXN3geScR5YQMHXKzP7170HOcrhgkHfoz3hlCyE5DXnAOB
l+XOZJsm4fxiSdQjeilpwYtE9GMrDjyb2wRvWz8hrzUHdi5o8GQnJuO8asuB
eqcpM43kPiLvTg5ET1P3mRuP86D6Hg5sN+Md2dgVh368jwOs4v++ZJ5LR14H
DnAOFZPVVeJE9e1x5IDG2y0DO8Yz0I+dOfDk9vzCXsv3yHuEA6PV46YeT7NE
eUo6ygEryxqfINl45D3GAUbX5qvecyf3G09yYP2M/S7NrR+xP3lwwLzSIjLO
d3L+P8uBs27Pjr9UmpzHvQj+zFcJ32s/Y3/y5oCa6v1DMawM5PXlwKsuyjjD
NBf7kx8H3JqqjO9rfkbeq0Q9ZdxImhdykTeQON90Z2YzsxD7UxAH1gzeebva
H+fTntscyGl5RwqdV4z96R4HqgR11+KLcrA/hXDgu1vv1aTQcuR9xAGxLcma
jnYF2J8ec8DTrv9g+9Zq5H1CXA++rlZHdCHyRnCgr/6Ez1hgLfYnCofo3/Mh
3LUEeelEHt/YtV5hT36/xOKAzkRFrmxxOfYnLgfWWh399mNXE/IKOFBt8hQk
VWqwP0VygLcjoFixoAn7cRQHopyFvhG135D3NQd2uAlIpsebsT/FcKBjd16Z
zZUfyPuOA7c+75+xaVEb9qd4DqQvV7Ffu6AV+9MnDtQ5f/oxnNOGvEkcuBE5
r+jSiw7sT6kcaD38t+7I9XbsTxkc6Lwnk8Ax+YW82RyY/0Tzuwm1C/tTLgco
ncVdF+V6kTefA3f33Hd7U9uF/ekrB/iFg4KMlwPYn0o4ELmKP/1oIc6XC8s5
UGj995/Eu2HsT1UcmHmLKbw8sw/7Uw0HtgreL/O9NYK8dQQf7/C22sxB7E+N
HOh6VPR4yuFx5P3BgZovFloH4v5gf2rlwKcmN8sSYn0U9acODgQ89A2rUBxB
3p9E/3mRkZvVN4H96TcHnm6RmVHt/w/7Ux9RD1sp7ayv4ujHgxygajUnz5OR
QF/8Q9z/1/ldgTsnnz8a48DtDJnHVR8k0Y//ceC/D98jNsXjfqOKOBcujx1i
60xMfl89lQsq4fXTLg9JoT9N40LUuTlVN6umoy/KcKGkY1pQWaoM+vEMLnQd
bdKfPzq5vziLC1+z09Vkvs1CX1Tgguz5jKAVZyb3G5W4UDWsVms3Ko++qMwF
v/j63Y+NldCP53OhoEIqZucOJfSnhVy4Jf7hwq2t89EXl3Dh0psDPaorVJBX
gwt8RXVv1rAa+uJyLgxYl5p3Ky1AX1zFhYAlvkUeTouRV5sLH87VawUeWIy+
uJYLmbSER5tjliKvHhcU3AKHnr7UQH9aTxwvZuPhDSYr0ReNuDBIDzlDU1uN
vBu5oGaTRGs11UZfNONC28PLQ4nGa9EXLbhwoKX6nYKTHvJuJo6v7PXqd8p6
9MWtXGCR6lnLyg2R14YLI46PUu+SNqIv7uAC2cf9vNIBU/TF3VzQKWlfuWGZ
BfLuJeqjtLg1bu8m9MX9XPgYVsZsV7dGX3TkQoX0PpbVl+3I68yFwFLnq6dm
26EvHiauj0/C31Uy9sjrygX7P94zuVJO6IvuxOfpz2izGz6KvniCOH+7trQZ
7z2R9zQXRiXzTPwPTO43ehLnWzY0eK7yGvrxeS44/Py71fbkPeS9yAWDVc/c
b5eF4zx7icjbVs6tlHE68l7hgvcP0nVxRx7OswFcKP/L9eGmvUQ/vs4Flz+y
H/uCcL9R/SYX+qR3PbWxiMV59jYXsoYznS7kx6If3+PCwgPa1yXX4XzZc58L
n56kK7TsfIXz7EMuUF4tO1ZIFyDvf0S9qh47rixjI284F4xoYlIaZ0nox8+4
MPT8X/iLXaHIS+bCw+lBx3LU7+A8S+NCndaOTpv6QJzfmcT9cK4jIevgJeTl
cOG5cX53mvMpnGf5XKg8mGBYcugo8j7ngrzhp5bVt52R9yUXtG1n07slHHB+
jybyYlT+Ekz2IW8MF9ZvmLLdQncPzrNvubDihN2a7062OL/HEe/XinCl79+C
vB+5sHJucdTRWkucZxO5YLzKNrWBbIbzewoXrLPA5B5nA/Kmc8G2BZq29Bri
/J7FhfAQtdSTJ9Yj72cumMub7mpLXofz7BcuWPRpfg4q1sP+VMgF/aHswKxK
PeQt5sIJ78GRfIYO9qcyLrhzTVekv1yF/amSC1dbXx8IfbEMeWu4YEJ7Vyfl
ron9qY7I551fW9UKNJC3gQu5WwqT5pWrY39q4kKphnABa8US7E8tXOBp1bxu
4C5B3nbieDp3h8MuL8D+1MUF16urig+FTe43/uLCIv2S6ECPecjbywUxikRR
R+Nkfxrgwj3NiOesJ4rIO8yFx0riht1FCtifRol6NeeENfyajf1pnAuk3C0C
qQAF5BXjwY0r0rOYjnOwP03hwc15lvc/ps3C/jSNB9XBclV59jORV4YHnn7u
1/xUZLA/TedBerKapeKlGcg7kwfv01Na0xbg8yHFs3lgOMc/Ot1NFvuTIg+c
a0o3/TwphbzzeLD0UH59ubQ09idVHsy/pDtz9IEE9qcFPChp7XNTc5iKvIt5
0Plk7HTOSzHsT+o8mDKuXnvDVAJ5NXlAUpBtlbMVQ96VPDgZu0P5vjU+v2q0
mge177YU3HvwF/1Yhweh2xZGZ//6i/6kx4Nj6VwL5qkx9MX1PGgw0niiUzWC
fmzIg5WyTpcrN42gLxrzQLeOMsjQHkZfNOVB+I3yXf+I9VXECzygKdcU5/kO
oi9u4sGdr1Ns8vyG0I+38MCldm5a8Mpe9KdtPNCxVrw7vnMAfXE7Dx4nWAVv
1OhFP97Fg7EXY6l5OX3oi3Y8oh//cW+p6kRftOfBdvK+rRUVv9CPD/BAtb+z
7fPaNvRFJx5kXl50gnetG3kP8yBFmNr/rbMF/cmVOL6jZavl73b0RTce9CxX
llZc24K8x3lg1lt41b68HX3xFA+2Pd2qKDsHn+9KOsOD2TlGqjbWzch7jgc/
g+sCT8/6jr54gQe9RQa/59/C583u+/BgQ5x5xYrCRvSny0Qe39KfrdhZj77o
z4Npj5e7rZJsRN5rPJh5WNyLdb0GffEGD7RmP542c28D+uItHpQtvnufeQn3
G9Xv8mBh/93egcQa9MX7PJhlXaKxqa8EeR/yQGwXZ++4WjX6UygP1ma/Gdmf
N+nHYTxoPNNz01Z8cn/kKXH8l7ltwezJ5+9IPHjyK8qg2bwMfZFKXI9I0n8G
LfnIy+BB4r0/x13Si9EX2QQvt//egVP5yMvjwYGJzMdyZ78ir5DI69U3tXlh
n9EXXxD5/3LL7d7rXOR9xYMOm+d6Ch456ItviPMJiVy1JzsbffEtD7boF1fJ
fs1B3jgeNC8Qe+5tjPtFox94kBe8muLUnYW8CTzQb6nUKh9NQ95kHsiu1mzy
/4TzR04aD8QDHzdkNE3u92XyQDFmr6Hp93T0xRwe+Ko++cw8mYq+mEfcXw3l
dt0pk/uPBTzYSA+bSC1IQV8s4kHELOruQflk9ONSHvySuXs6wCAFeSsI/k1v
L7/d/wn9uJoHD5+U7Mhcgs+TrqnlweXImJG9PrjfqNLAA6sS2jfS6VT04yYe
/NCmTTeyiUfeZh5cqBS+7/uM81ZrGw9mfBpuI8fFox938qDw3nJZP1Yq8nbz
4FBMp+7IqY/oxz08GPXxWbP3xuR+Yz8Pal7V7g6pntz/G+JBoNbiMCtL3C8N
HOHBqcM3QxrCU5H3Lw9uKfvG/7clGefZCR5ww0z2xXyYnN8l+NCf1d/xyToJ
eSX58HX+9Xejz7KxP0nz4V6q3EFzYr4W8U7nQ8jl7ceqVn7B/jSTD6y2JSGp
J5KwP8nzwcMz/+CCOHzetHUOH5btrenMjMH6Fs/lg83FC/L0f0XYn1T40PHX
lp1wIx151fhwd9ZOqf0rS7E/LeKDy4kufvTWLORdygel22PGn0JKsD8t44Pa
lzaTvx652J9W8EF6e89a04Jy5NXiQ0t1hrLLwmLsT2v4kNpnvrTufAX2J10+
cIKH3p4NwvtnxTo+WM/xkZiVW4n9yZAPtlsWeVk8xOcFJI35MJrj2B/RWo28
JnzYK/mgQbGxAfuTOR/sY5Yck0j7hryWfMjwmp0u59WE/cmKD2s7X953vFuD
/cmaD7/vPVE/79qMvLZ8aEgI44oZTPannXwgd89oN0ntQN49fGga+y3nNxWf
p/fYxwd5ldfHc1ld2J8c+LA5YnnwYvFm5D1IfL7r3Ynnn7uxPx3iQ4D25jLv
x63Yn1z40NNwyXo4qwd53fjwJcA+lPm3E/vTcT6IzXrnWTWnF/vxST44/lNJ
87b/jbwefAjWv+Fiwx/A/nSWDx9unqHrzxlAXi8+VMbGKU9YDmJ/8ibqM9hz
t/HeIPYnXz7Mk+h5MXcPzpf3/fgwI0xfY/X1UexPV/nwT4FibNww+X1qIB8+
rg56kCo9+X1qEB+mNZyQlw7F9c7yDh/0hbOf2m2eQN5gol4bt59xV/2L/ekB
H4xWmCWe3Ybr+6xQPpQuo7WzxMXQj8P48FNab9V9Vdw/7HrCh4k/vvJZWlPQ
FyP4wFVpYzi9kEI/pvAhYsKHdnPH5POrdD7QUuysXCNk0RdZfKiQmzMR3y+F
/sTlQ6d1W2tc6Az0RQEfXqx1EMjPnI5+HMkHu6ulv1c/k0dfjCLquTPcuvPC
bPTF13z48U9rbsk5BfTjWD4or67UvlaogL74ng/uf+q+GUsroS9+IPL8cIbt
qVJl9KcEIs+Fju8oPSroi0l82Cc/JUYuZD7ypvJBZftSTp/c5POqGXxgUlmJ
z7UWoy9mE/ertDAtcXAh8ubyQTB35lzdo0vRF/P5IBzqC1/puxR5v/JBvGZR
1YMpK5C3hA9lm7Y/zKxeib5YzocDw2MvvXu0kbeKuP5byxXLrbXRn77xwbQ+
+YRyjS76Yj0fggTWDXWX9JH3Ox+6zl99sv64IfpiM1Hfq0nJ79dtQN42Psj0
utgE9JkgbweR5yn01OubzdEXfxL97Gfr81fmlsj7mw9LSmQ+Nvxnhb7YRxxv
Qb6l1BYb9MVBPrRKhG0Sd9iNvH+I+y0h2num3V70xTE+lOTl6Xl3O6Av/uND
/Jlj/8pljiCvuAAeBHao5+w8ib44VQB2a7Snvj+Gv9fbLiWArjO7jhh9v4y+
KCsAj5zixVJHg9CP5QSw+bDR2uHdOG+pyAuAbdwfGlxFwnl2jgBub949kB3J
Rj9WEsCZUjm1qA9C5FUWQE5k5R6Y9gb9eL4A0lsznh9dHou8CwUw91nrvvPn
YnGeXSKAFSG9Rt3NsejHGgLY7nF6lw/tDfIuF8C5c+u+J1+PxHl2lQDKZFs6
v+jh87Ee2gIA3wa7YWkG8q4VwFOf061U53Cc3/UFIOUWv/BZVTDyGgggae2j
E6G2QTjPbhBA6rbPhy2NAnB+NxHAcu9Li7yizyOvuQB+20Vt7I12x3nWQgA3
diuXrj/qgvP7ZgF8SHa0/NlyAHm3Evx3/XVjMvH3jUk2Ahh9ZDFv93075N0h
ALJ5n9aBDbtwnt0tgG8+J+/vnGKN8/teAbyuNg5s/r0ZefcLwF8tMKcyFnCe
dRQA4/mXF5eUTXB+dxbANPoxs6jNRsh7hOCNaaUE/TbAefaoAPJrHy2rTl+H
vMcEYPgjZGFFuz7ynhTAqeiCa4EfJ59P9RDAxu4pD00EusjrKYCVglzddT2r
sT+dF4CW87yJqSHLsT9dFIBl27q7gdKayHtJAEs2PXCzO7kM+9MVAdgm75/d
06WBvAECuGhpSol9vQR5rwvgmEXrNhc5/D7I56YA1LK8T1y9vQh5bwvA1zHG
dUmLGvanewLwtE/r9BPMw/4UIoCgnONyIUXzkPeRAL7Lu21rbcX9w4WPBfDp
vca1pVJK2I+fCEAzVve2ar888kYIwGHF1sG1CnOwP5EFYPzeyrzhNM6XtTTi
/Q59PxovKWB/YhL3017N4YwbctifOAJQ1pEOe38Gn0d9zhfA3nnXe0jVuH/4
5LkACstXHbm1cDr2p5cCOFsrHnFfII280QJYoJ0dKaYog/0pRgDLVgWGnd80
+fuDd0Te3821S783+f1ivAA2rK9+dWLWVOxPnwRQIG5fofNq8vcQSQLY1dIe
Gm4jgf0pVQDJJiUWvWZi2J/Sifv/xu0LNlRx5M0SwJuUVcMF3DH0xc8CWHRV
K8jTawJ98YsA+uc4xtK88PcebwsFMCUs0uyJ2+T3qcUC2J2WbDtWPYR+XEbU
453tWDllFH2xUgDjD+puxEYPoi/WEPnzvSz2zADnS9c6Iu+/LN4s3ovr+/ZG
AQR+P2AVrjP5+8YfRP1viG12NO1FP24lPs/X9NHZkn70xQ4BmLhKcOqe4Hwp
+1MAwyGRlfL6PehPvwTwqCfI+9yvn+iLvQLwvrpnm39HB/IOCED3omUV5UMX
+uKwADZ15ZNTLdqRd1QAt6a/b79j2IG84wLwK048cOl8M/qimBDMG6M1ZYfw
+dTAKUKYV3Ok/FwS7h96TBPCoaR/roXjreiLMkKIuqz/9xO5AXlnCCHfSf7W
d8cf6IuzhNBVN73p45Ra9EUFIbi3SJ5f9HDy+S8lIfRMiXzqHDzpi8pCuLQr
qmkPB+fLQVUhaGZb/HxuX43+tEAIAV3+D+a9qUdfXCyEw+JOr+88qUBedSFk
f/kxVHmgCn1RUwh+YW8L2tvL0BdXCuHiRHtm++wK5F0thAcVHzYKZ5ShL+oI
YXRX2cqG0GLk1RPCstNMUurDEvSn9UK4t3hjwKkFReiLRkKwl1Oa6fK0GHk3
CmGhYvLKnoO4f6huJoTchl6q4+xi9EULIazfqe0/tSAHeTcL4faR+QqfO/PR
F7cI4dom0/P/ijKRd5sQkue2bD55LA99cbsQmn6o7nxpib9vTNolhD/Wnv5X
zXOR104IrZbxAz23M9AX7YWgpy+5Oss9C33xgBCUjDQ97palIa+TECyFrles
BJO/7zsshFlRtq4k8XTkdSWu9wz2zSC9NPRFdyFMPNr7/e7BNPTFE0L4nJbu
5XITf6+ofloIA1ZXHs9ip+I860mcj7jimPKZRPTj80KIL3m7LCwo2ex/4A59
Hw==
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8, 0.4, 0.4], 
         Thickness[0.004]], 
        LineBox[CompressedData["
1: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
xPUs4uVTQUH72MOk19VY3zgqrC23n3hSXod5SqBCm+4hNfjUiLypVMgnmazb
5FCD9c2kgsqzFzEBUz5hnvII3rE992zdqpC3hAqRr/dtZFA7ME9vqcDenjn7
4ry3yFtHheob6vtzs7uR9x3x+e7JZsmRbzFPH4nz/218is6C78j7mcjbvCMN
9+mT/ekbFd7lNW9VVOrHPA0Q9d0eEfEhuA55f1EhfDRFIkSrH/P0lzjf8SQD
6elNyCtBg4AiuXs7QwaQV4YG7v0b+YNO7ZinaTQoCPc667p2EHlVabAoaU8H
5W0X1nc2Df6s8H5ywm8Q86RLA39btrTUmh/Ia0SDLwte2VVETK53pjSotd4X
Yak4jHmyoEHz9dubD4n/RF4rGjzPtHXmLvmFeVpJfF6wxcrA7YPIu5oG6X0D
Zvat41hfJ+LzrV9t+lE2iHnaTLy/pqT58HIx9BlXGrxwXtgoETyI9d1JA16W
odSqzRLoM540MK48tjtfaRh5D9JgwCXZo99bCn3xMA1IyXNid+b8Rt7jNFAJ
uOv23l0G/ek0DeKUVR/ZuYqhL56ngeOXgzT1h3LoM5dp0EJ/4TZDSQJ98QYN
DvWeXJVyRR595g4NGrSctOXtpqIfP6SB2RExC0fdaeiLNBp8CPkeRsuXR19k
02C/i1m0xNQZ6E9CGpgWFC7f3TUdffEpDfb2PptyNnYG+kwSDaYpM+THrWei
L76kwZRlrCGm9qQvZtHgomcgbRFLA3kLaLCvWjD92R819MVSGkSflzou3qGN
vFU0eHWwcSK+SAPr20CD4WVjV0zWz0VfbKZB09uduzrVdJC3jQalG+d/s5ll
hL7YTQOllkVaU5P00Rd7aXDq+8Ogf06myDtEgxtu/sX+h+ehL44S9aotaUv6
uAh5J2jQ6Kv3rX3TIuSVosMuo6Gwf8VL0Rfl6JD+Qzv+Uf9S5J1Ohwef48V5
JjZYXzU6CPo3MvupK9AX59DB6YBbnarfKuSdS4czjRrRYT1r0BdN6ODyJOr2
82AH5F1Ih2+6IwnZJZuQdwkd9qjyXg7v2o55sqaD9UTtVdqXXchrR4fez4dC
x3y9sL5r6XD54yDv3hk/9OMNdHDsX3mtblkw8m6lgzDswMKKRxcxT+50YKlX
DLvV38Y87aFD5JGkGY8OUJHXiw6u55RScxK4mCdfOji/WM+N/BaPvEfosHP+
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
Riw=
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         RGBColor[1., 0.1, 1.], 
         Thickness[0.004]], 
        LineBox[CompressedData["
1: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
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {2130.3, 0}, 
     PlotRange -> {{2130, 2190}, {0, 0.09940522777421101}}, DisplayFunction -> 
     Identity, AspectRatio -> 0.6, Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {2130.3, 0}, AxesStyle -> 
     Directive[
       GrayLevel[0], 
       Thickness[0.005], FontSize -> 14], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{2130, 2190}, {0, 0.09940522777421101}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {{{2120, 
         FormBox["2120", TraditionalForm]}, {2130, 
         FormBox["2130", TraditionalForm]}, {2140, 
         FormBox["2140", TraditionalForm]}, {2150, 
         FormBox["2150", TraditionalForm]}, {2160, 
         FormBox["2160", TraditionalForm]}, {2170, 
         FormBox["2170", TraditionalForm]}, {2180, 
         FormBox["2180", TraditionalForm]}, {2190, 
         FormBox["2190", TraditionalForm]}, {2200, 
         FormBox["2200", TraditionalForm]}}, {{0., 
         FormBox["0.`", TraditionalForm]}, {0.02, 
         FormBox["0.02`", TraditionalForm]}, {0.04, 
         FormBox["0.04`", TraditionalForm]}, {0.06, 
         FormBox["0.06`", TraditionalForm]}, {0.08, 
         FormBox["0.08`", TraditionalForm]}, {0.1, 
         FormBox["0.1`", TraditionalForm]}, {0.12, 
         FormBox["0.12`", TraditionalForm]}}}, TicksStyle -> GrayLevel[0]}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"m109c-exp\"", "\"c.2\"", "\"c.3\"", "\"c.4\"", "\"c.5\"", "\"c.6\""},
       "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[0.036000000000000004`], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[0.036000000000000004`], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2, 0.2, 1.], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2, 0.2, 1.], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.8, 0.8], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.8, 0.8], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.8, 0.4, 0.4], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.8, 0.4, 0.4], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1., 0.1, 1.], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1., 0.1, 1.], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Thickness", "[", "0.004`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.004`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2, 0.2, 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.13333333333333336`, 0.13333333333333336`, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.2, 0.2, 1.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2, 0.2, 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2, 0.2, 1.], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.004`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.8, 0.8], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.5333333333333334, 0.5333333333333334], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0.8, 0.8]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.8, 0.8]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.8, 0.8], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.004`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8, 0.4, 0.4], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5333333333333334, 0.2666666666666667, 
                    0.2666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.8, 0.4, 0.4]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8, 0.4, 0.4]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.8, 0.4, 0.4], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.004`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0.1, 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666667, 0.06666666666666668, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1., 0.1, 1.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0.1, 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 0.1, 1.], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.004`", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.739295921668127*^9, 3.73929603037576*^9}, {
   3.739296924791065*^9, 3.739296939714411*^9}, 3.7392969941732903`*^9, 
   3.739297103974003*^9, 3.739297170396213*^9, 3.739297682725359*^9, 
   3.739297717057458*^9, 3.739297778311508*^9, {3.739297861943371*^9, 
   3.739297982605835*^9}, {3.73929802895833*^9, 3.7392981764145393`*^9}, {
   3.739298212188097*^9, 3.7392982946006203`*^9}, 3.739298339494357*^9, {
   3.7392984744342327`*^9, 3.739298499115645*^9}, 3.739298543021117*^9, {
   3.739298881687348*^9, 3.7392988966448517`*^9}, {3.739298943924363*^9, 
   3.739298969151779*^9}, 3.739316016256319*^9, {3.739316117015773*^9, 
   3.739316140782217*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "m145cExpLSNorm", ",", "m145cC2LSNorm", ",", "m145cC3LSNorm", ",", 
      "m145cC4LSNorm"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2130", ",", "2190"}], "}"}], ",", "All"}], "}"}]}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Black", ",", 
         RowBox[{"Thickness", "[", "0.004", "]"}], ",", "Dashed"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "[", "Green", "]"}], ",", 
         RowBox[{"Thickness", "[", "0.004", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Lighter", "[", 
          RowBox[{"Blue", ",", "0.2"}], "]"}], ",", 
         RowBox[{"Thickness", "[", "0.004", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "[", 
          RowBox[{"Cyan", ",", "0.2"}], "]"}], ",", 
         RowBox[{"Thickness", "[", "0.004", "]"}]}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<m145c-exp\>\"", ",", "\"\<c.2\>\"", ",", "\"\<c.3\>\"", ",", 
       "\"\<c.4\>\""}], "}"}]}], ",", 
    RowBox[{"Ticks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{"i", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2120", ",", "2200", ",", "10"}], "}"}]}], "]"}], 
       ",", 
       RowBox[{"Table", "[", 
        RowBox[{"j", ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "0.12", ",", "0.02"}], "}"}]}], "]"}]}],
       "}"}]}], ",", 
    RowBox[{"TicksStyle", "\[Rule]", " ", "Black"}], ",", 
    RowBox[{"AxesStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", 
       RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
       RowBox[{"FontSize", "\[Rule]", " ", "14"}]}], "]"}]}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "0.6"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{
  3.739295616992375*^9, {3.7392958524357243`*^9, 3.7392958882239733`*^9}, {
   3.73929593407476*^9, 3.739296010101408*^9}, {3.7392977401831303`*^9, 
   3.739297776794456*^9}, {3.7392978267359047`*^9, 3.739298202385062*^9}, {
   3.7392982329972067`*^9, 3.739298350732132*^9}, {3.739298450235526*^9, 
   3.73929854232933*^9}, {3.739298880942786*^9, 3.7392988961612463`*^9}, {
   3.7392989431563187`*^9, 3.739299059855137*^9}, {3.739299094650421*^9, 
   3.739299120448134*^9}, {3.7392991703579473`*^9, 3.73929917772687*^9}, {
   3.739316191257636*^9, 3.739316226673402*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.004], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1: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
Q6orjq/fSuFTd5utbTsC4D+HSeoU
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], 
         Thickness[0.004]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.2, 1.], 
         Thickness[0.004]], 
        LineBox[CompressedData["
1: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
nQNjMo9Of6i+jvPsLaK+o6e2BWwLR967HOivN5+rpB6KvPc5MOk8Xj9mdxDn
94ccyONd2al6dzfykjmguuVMfrKzN86zsRwIiTxgO/TBA+d3Bgeu6Lupir/Y
iLxsop5lAW+kTjnhPMvjwB9KiXumxxrkfcQB/a3dQf3JgLxPOcB72HDlAmMF
zu/POSA2sPOd9tAy5H3JATP9G1aPNi/FeTaRAzBI1tzIWYLzexLxfutmxYVf
MkHeFA7MbFTZ77bZCOfZdA58iFoZINe7AOf3TA6kBm3TWGlqgLw5HAifH+sT
Yjwf5/d8DuTsnlbye6MO8hZxwMCzymOkWLh//5EDTyusx+vcNXF+L+GAJ6Vc
/ZGzGvKWc6BlW9FMyREV7E+VHJBSCzx5Zt4s7E81HPgZuqKjOUoZees5cFKu
Ur+EoYj9qZEDLyRc8/qtcf/xbzMHZg1EG0hrz8D+1MaBxS25Sm8j5bE/dRDn
g5RKu39KDnm7OXB0dP+tpElZ7E+9HLhpvXu1epRwv7GfA1Udqy/VVEoi7xAH
In5ordzaK4796SdR37e5juPi4sj7mwPNZ08a1z8Xw/70lwNaV18q3Ls5BfvT
BAfmOXZeE60WRV4RLrzzV1q2cPIf+qIYF1K3s/oe7PyHvijBhbUy94+c8hzH
9UeaC4Zvjqo9mTeOvijLBbWplmumqoyiL07ngoiFvJZCxyj6kwIXglTzH0H7
L/RFJS6cy2cZeGUI15/ZXOCf0LAylxlGX1TjwqW//rJpK4bRF+dw4ZD6xn+r
Vwzi+jOXCyOjcmZ7bw6hL+pwISFX/9Nf/370RT0uxNaf9jEdG0A/NuSCzKfG
6z1/e9EXF3Hh6/r9l4Y8vyOvMRc+eZ/4dml2D/rTEi5kFg36hCv2oC8uJY7/
Q9Bv/bNdyLuMC0skYppHOjrRF5dzwdN6oXnseAfy2nDBZ9ephcGXhPuLwAXp
xcvORb36ir64igtP13VEX/jWirwOXNjqMRCom9+G/rSO+Ntt+8/C4Gb0xfVc
OBoRXqdVifuJAa5caHnowSuSaEBfdOfCrsuvJq/NbkFf3MyF8Ti5p/zldci7
leCja+ffG/6CvujNhdpjD24vIVcjrw8XVhxtj2ndUo/+5MuF7+2y9/f+wuvH
BvdwwTRMfWqlo/B6VX8utDtfylu74jP64gEurPTL95kwqUJfDOTCmpcJln45
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
wGAy
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         AbsoluteThickness[1.6], 
         RGBColor[0., 0.8, 0.8], 
         Thickness[0.004]], 
        LineBox[CompressedData["
1:eJwtm3c8le8bx81EEmmgSJRSSCmjwpVEinZJSUgqSRIN9TWaiDSUs/dQKTKT
kWxlk1GKkFFZZaXU7/mdi3969Xodj/t9nc9z3e/r3M9Z6H5611EJMeJHSkxM
9O//f3xjQd9hev7NGqHlpVnPbD8HxIK1atWWD1FsywXXv+18cSkW1B+HjFx5
F2tJIRM/obHAlgjYcTjmjuX/Xx54MxaeKcc8c19zw/KFBvELUbGQ0yuraS0f
aGn0/5/7scDNcbo5QD9j2cD1NZcjx4LRviPnrG55We76/y8wYsHYhzqVFnfE
sryM+OHFgt+Fs4emazpbnjGXa+A+jgV/a3MpWY19lt93Er+QGAsazDu6Xjb2
lp7//0mLhVapIwIPdztLuf//gaxYuPJf2moJCVvL/y9fI49Y77NDb+7LbrLU
dY7OGy6OhVETxdppcy0secRyGsqJ9fD+pa8lmyNvbSxQLI/Mhm1mlvnDS52j
m2JBYpo/+bSYqeX/l+PbEgtKHb+ZsSeMkPdLLHQcn/AKjzK0/P/ll36LhaSA
I/qLTQ2QdzAWbKI3SD3dsQzrOxIL6+IZMqzVSy1HiMvn/YmFH3k39zYMLkJe
CRKMdyj0V37UwfpOJUHJ1fsffs9ZaPn/yzsrkOBUVNeeK/YLkXcWCahVd25U
TJtr+f+Xz1IjQe7qN81FcerIu4AE6VHM773LZmN9FxPXkzgusey7quVm4uXP
lpOg0Mx2SEJeCXlXkkAmcRpvdP4crK8JCVL6Jf8WCWdY/v/ltuYkuKqz8/JY
tTLybiTBaauv57+FTrMU5cmOBA/mNq8eua6EvNtI8Fd337eACVms7x4S1FeM
v6KclMM8HSDB7o39B6y0pyCvKwnOKkRSj4jJYH09SdA265p+eJ0U5smbBL3R
1b7sjZLI60eCTLV1vxU9pTFP54m/v+olX/P2hIWI9z8SZG2b3jAzQgLre5UE
G5O+BVjc/WUhylM4Cd5ucdUuOSqOvNEkKHu0s++C7aCFqL4PSLDzhJGzVbgY
5olKgiqrLocW+g8LES+bBE7r+RntL8UwTwISBG1U+vNpa5+FiDeeBF3zr4xW
8H9biHiTSDBWds5iqd1XC1GeXhDvj4TH8rPioxYi3hyi3sNGA6vVuy1E9S0g
gU/xAmta6bCFKE9vSBC/6VDpRU6PhYi3kgTsmW4zPr4ctBDl6R0JNvy3wMa4
tcdCxPuBBIvseQa7aAPI+5lY7/bYXyqU7xaiPHWRQPOivPjl+B7k7SWBf752
NiP4m4Wovj9JYFuwX3pvcZuFKE9jJOi3FHMui+ixEPH+JUGxTnRmY0CjhShP
UmSI22lv8jGo20KUJzky/E3YpXdu5jvkVSRDf43joXZSj4UoT3PIsLR8+tX4
vTXIO58MWf+WGXks6MH6apFB+fuuW/GNlRaiPC0hwzUvyujS6E7k1SfD6gPR
4u/b3mJ9jcgwxaN+tNq43UKUJzMyfOVozzGSK0NeSzJcnJumuIreaiHK0yYy
MGgVcy+VFyPvVjLUagVI3w9rxvruIEOIOinu/M9KzNM+MmwY1HizLLIeeZ3J
QHpfMuZ1sgrr606GFQnFTQrsagtRno6TgXnuqlDFpwZ5fchgzOM1x+8vsxDl
yZ8MPd4xX/ZX1yBvIBlGyuoM6yYKsL7BZHjlOL4/SrUW83SdDMnUJCXpjy+R
9xbBu+Jj2KqKaqzvXTLUcMvV/3ilYp5iyeBH+uv/SbcGeelk4B57JuuRmoJ5
4pLhsYdtlvfLKuSNI4Nbaslcee9U5H1Ghh1Ng9NkjCowTylkSNKSO1Fskoy8
L8lQmf/xn8aNUqxvLhkuX3mSJJBJwzwVkYl8l3GZ2kXIW0aGhJJgtePfUjFP
1WSgqj6mfH2dh7wNZHj0d9m2bqkXyPuRDLd36o3bKLzGPLUT6333YN4J+Qzk
7SHDVNabxWePvcL69pPhs3L/2rvD6ZinYTJYPVV+c+VQDvL+JsNCmlX97tRU
zJMYBWaHWOdd+pODeZpCgfXb152iHUpGXnkKmBwcWm52LhfzNJMCb997NeXa
PEdeFQqE3T626tGj11hfDQpUNvzmVuQ+wzwtIl6/LH7Vte95yKtLAX+FZZc3
n3uG9V1BgYBgW+sTt/IxT2soYLPNXdZ6IhF511Fgy7WVE6G2+ZinDRQIP3bA
7tHGFOS1pYDr5e97pB/mYX0dKNDDlxR4fHqJedpNAX5JXtb1S7nIu59Yn/iA
a5R1HtbXhQKJZuy15dezME8eFPDmJb+a+FOMvF4U2LXxxbb5t9MwT74U2KOf
RmmvKEfecxTwtGl5efDKM6zvZQqUrlG8FFRcg3kKpUBTR5xMXHs88t6kwEG7
mo+Sy+uxvlEUkFnsvbQkjYN5uk+BIhn6H+37jchLpsB9xUu5WyoYmCcmBVQE
nscKepqQl0+BhZZNVMP6RKzvYwpEsCof1e1vxjwlUqCmsSiSWpuGvGkUoJ43
N83s+YD1zaLAHc/PkswDhZinPArcmH6C5GPcjLwlFIiWqzvmZ1WJeaqgwL8D
F2x6p75H3joKHDKc9/R2ZAPyNhHvj56BSqTbe8xTCwVsoUVJK6gVeb9QQCPC
rGnq+gas7zcKXE4LzCEtacc8DRJ5iClijCvXI+8oBVbcfykwd+rBPE1QwKfN
wyVRoh55Jagwv7fi7vytvcg7lQpaQruqGeo1mCcFKoj/UDnQJNmPvLOo8Lwp
U8I6uhbrq0aFxkTTe5UZg5gnTSqc17s7O8axBXl1qOAR86P+a8cQ5kmPCpnf
ZF/xWtsxTyupsDruk/d2pSHkNaFCrXewdcyKDsyTORWodRZhFTeGkHcjFXQU
sxalZ/Zhfe2o0OVEVQszHcE8bafC9RmOBheWDiHvXirI+LnyPRaMYX0PUKGS
87CeXfUL8+RKhbeR3bdj9o8irycV1h1xdIwa/oN58qZCmeyJ/mO0UeT1I64/
lhFg7S6O/nSBCsW+ksw48THMUxAV7l+4Epb9XAp95hoVNug5LPlq+AvrG04F
8lBam3qBDPpMNBUuxI9Lfjkojj7zgFjPnNctPnfl0RepVJCfbq8sHiGGPsOm
wuEdvtuKg6ejPwmJv5cUfH3Hamn0xafEeguXVMyOUESfSaKC1e57q9yi5NAX
X1DhgFJ2tL3WLPSZHOJ6dVvjtPOV0I8LqHDUfbbtkfmz0BffUGHkaZL7hcPK
yFtFhcFELU2m56Qv1lNB9kfseqMvquiLH6ggVdVlJyVUQ5/5TAXjI/H3futr
oC92UeGP9dEZqRIL0Bd7qaBGfeuU1KONvD+p8HT56GzG+oXoi7+okHvw9vDP
g0uQ9x8VQjtDtKyzlyCvNA14t6YzLhXqoy/K0SA1eBa1V0wXeRVpcDZNuu3K
w5VY3zk04IzVm6xab4i+OJ8GE7V7nkhpGSOvFg1sLnyZ8+6fMfriUhrwd1a+
iyw3R14DGiiR2kbuMCyR14gG8t9jhz9PtUY/NqPBo3UfFYrqbZHXkgbf7oFO
VecOrO8mGiy+2127LmMP+uJWGqzYtXoedYUT8u6kwc0rMRdPObugLzrSICN7
s8OUCE/M0yEa/Lh1RXtsvR/yutNA7fWNZ7NbL2CejtPAvwnuZzOuIq8PDb6n
s9qf7L2L9fWnwRY5GckHlVTMUyAN7tWG2J/ezEPeEBp8Wpt/KF77Mdb3Bg1s
ZfY29wfGY55u0WDzQGtuaWoC8t6lwUP/vs6YZc8xT7E08LnzYNuLt0nIS6fB
be8VTy44JGF9uTSY0RiyWufaE8zTI+L1ezaPJnF5yJtAvJ42uznvIw3rm0Ks
p1Ve6m3BfczTSxqcMdkYGul+C3lzaRA8sj+le34o5qmIBiPmU1o33/ZH3jIa
vL1u4OCb4oP1raHBYftRva0NnpinRhqUzlsy9N7bFXk/0aDG1eCEhrkT1red
Bs2e3KW/b+7EPPUQ69kR0uqxeAvy9tMgTEnBlMSxxTwN0yD3tHpmiokt8v6m
wavOZo3wDsD6itMhavnMhbnfLDBPMnT4J6MemjdshrzydIgsTnk4Yb4W6zuT
DvOXP9lYsGk15kmFDoXeTyeiDI2QV4MO8j982v/c08M8LaJDSma15Hn5Fci7
jA4tfk56b1J1kNeQDpkbpUNGdyzFPBnTYdqlXc+f7l2EvOvooOOl6XyAuRjr
u4EOrx9H0l5/XoB5sqVDyPHqqE5VDeR1oMOdmnxueKsK5mk3HWrWxTxbbaeG
vE50OFcrefHY5cl+cZgO8yiw2q57FubJgw4Jl8LWJ/vMQl4vOiQGewWWBiph
fX3p8Iy5xWHTe2XM0zk6/Nql5Dq9Th55L9PhuoIu46DcTMzTFTqcuct8MFQg
i3kKowPVT0pp16kZyHubDisu/Yxw3iKBebpPB91mp3m5HvLIS6bDjqshD8SO
i2F9mXTYLCgbM/o1FfPEp0NtRURvNOMf7j9P6OAYMMNkxd0pWN/ndCg9zJq7
99kY7u/pdHi4f635bENJ5M2iQ2vrbLr1xBjud3l0cNpgrcSon8D9vYQOxrbT
7rdlD+N+V0GHAVOF4I99v3F/r6PDqn1K+6Lv/8L9/T0dzlNfrTygOob7XSsd
2IPqZbleI7i/f6HDzaBFYVdW/sD95xsdSn4LGrc7DON+N0iHLdzvxyUWf8X9
fZQO/VukblzoG8b9boIOcocV9QLmdeP+LsmAMzurWp4ODuH+LssA7YzL69vs
2nB/n8GABWUx9vZdQ7i/z2JAwY3a8Evu7cirxoDhfZ+lak1+4v6uyYD1xS8U
Xl1oQV4dBqhJR838RR9AXj0G3PyXepf/uwn391UMOLD92Nczn74irykDKq5a
OAX71OP+bs6Aormbth/T7cL9fSMDbmelkHMTPiCvHQNUPtx3Ctvdgfv7dgYI
Z55buWL0E/LuZcB+j4Cv+SqfkfcgA1Yp8cJTUltwf3djADlO03/94vfIe4wB
UrP0SYW3W7C+3gz4sXlX+Zm4GvRFPwZo3jVLHI5oRd4LxP+1phYsKCxGXwxi
wNzCb9pBki2Yp2sMUFQy6+32KELeCAa8vfPLpOPTJ8zTHQaYrd25PqkiB3kf
MOCleGtm4IlmrC+VAV2svJPLl2RhntgMKF1unBIc/x55hQxYeWZhg75XFtb3
KQO4I7dnsz9O+mIyAxQuXznlbfwKeTMYcOp1+rnC8hrMUw4DLqtB4MWb2chb
wIDAMO5TP+MKrO8bBoQ7v3xeQsvDPFUx4PCNmIJQvzfIW88AF9vdUim8Aqxv
MwMS93n75dwuxDy1MWAwyCpXhlKEvN1Evv7c61iTNDl/9DLAs65ojtjhQuT9
yYCUc8XJcyIysb6/GND6U3rsS3gh5ukfA47qq2lIK6UjrzQTLAUzT7pF5WN9
pzEh7fahwenfUzFPSkzoj2+a/ubi5Lw1hwnLzhZq7/6Yhnmaz4RhS+VWUkcu
8moxwSYhbvTZhnSs71Im3HVfvzz3Ug7myYAJ6hv6rB7EpiPvaiZInPuV0DU9
C+u7lgmsgsZFdwvSMU/AhIe+x/3zozORdxMTrB08NuQuS8c8bWWCr9nUph0r
s5F3JxMy69j7G+VTkdeRCYuTwu049rmYp0NMoJ2cHvwqMAl5jzChdOFta8mq
PKzvCSYkdsbfOZ3/FPPkwwTTTRljuv2FyOvPhE32Zw/1POJhngKZMFQ+9tPN
ohR5Q5iwYic5aIkJE3lvMMEx3kWnW78M8xTJhHtJ7WpTF5KR9x4TGjgOMR6m
lVjfWCa0D2bq9l9nYJ7oTAjSp70uuFSFvFwmuGXw3+6uFmCeHjFBerDk90KH
KsxTAhNaZs3iRJ5PRt5UJqxXX+xiUV6FecpkQpnKdsdl8q+R9zUTXnC6fm55
VoH1LSLWyzvTwuYWY57KmDDX6cyfV8w3yFvDBLW22yoR8yqxvo1M2HDJzWEg
vAjz9IkJ3+QKJ3S2Td4/HcR63R7LibvlYZ6+MkF45NFMk8PvkbefCZSW909W
dudgfYeZsLaET9np34p5+s2EiCfr3f9aZonyUizGgjXqG6Nu+LaJ3r9kSRYw
mlLKXXOzcX1TWOBgmDrx5uYX0d+LkWXBDU6wsVlzkShPIfIsWJzp29F3pAvr
NYMF89sjW6f3leD6Z7LA5njSW0lf7Jf2s1lg1Lr/iLbpO+RRYYGYpZ/jI7ke
rOc8FuRf1q3Rlvwoyp+qBgtkQrbOTs7twvouZME8LX2T4eetyKvNAt6p9tGr
g19E+ejUYUH6f6PkxzGdoverWpcFFec3PmkO7cL667Fga3pD5tyQAeRdwYJr
5aWDFRo9ovwwVrHgcNyavtPyPzEPawieFXtV9n5rR15TFkj52HKM+4ZEeT65
jgUFf37FGHV3Iq8FC9pVyJKbDceRdwMLBo9XTNfa+lWUN1NrFnxYPSB26+5f
5LVlQbKfw2U7Yj2i93MLCzSkaVqbk8REPiLtwIJP18Sb8g8OIu92FjDnGtx9
bCmOPrWLBdeDrgmq4oaRdy8LrtAa7bwVJdAn97Pg+/5g7ay8cXz/D7KgX1yr
8I65pMhfGC4s6FtdUELJ/Seqb4QbC1yn9lYpfpVG//JgQUL74cjDU2REfnHy
GJGH/Ma8t1JTRH7j6MWC8TjN2pXvZNAHTxH1GPft23MN509TXxbclYrrCZ2p
IPIt7bMs4BzVflT0TBZ97RwLQG+Oe800ZfSni0SeyiuOpF1XFPnQwCUWnJG1
zwlXm4O8QSxQECsN7X41A30ulAVWZwZfNBupivws+xoLGkh16hZps9BnbxL5
6JMPDyRroF9GsGDJzq4Y/TkqIh+PiCLej/OndpUsWyjy44A7LLhUXnRfV0wT
/e8+C17YXfJbGrAIeR+ygH7QtLdDT0tUXysyC9yU3x81UtVFH6WxoHld2fdD
a5chL5MFGwLsphx6vFzkezM4LOiqWlAoSdJHXj7BHylzwGXYEP1NyIKZlwY6
f5kaify++TELJCNAYs1UY+R9Stx/32IFXTvWoU8mEv/fvGXs2y5zkR/GJbMg
qGidU0qyFfKmsWCF6st0Bz9r9NsMFrwnZTZva3ZA3iwWsHRDV1+y2IW8r1hg
LuAskHzliL6dxwIP689l3uEHkLeQWH9q04f4U+6i+hqUsGDL6dVPbpV6ow+/
ZcFwd1TSfw0ByFtB9JODypHSckGiPI1XseDfLaa57vUI5K1lwZ48b2ujbQ+R
t54FCzxjJhZMZ4vyVNzEgrPe9QMPSULkbWaBUqPy6VT2E/T3FqK+ZQ9dauue
ivIU08aCy6Scmognicj7hQXFM278jG18jn7dzYJA3rPX7yBZlCe3byzY/Tem
YL1yIvL2sUDokyK3MlmIvj9IrL/42wj9NBt5h1hwct3F3peP8bxRdZQFq5wp
2z6cv4Pz3TgLXu0oaF0ldQN5/7Ag5WhSy/E3F0X17fxH3E9Vf7jeN8/gfCDB
hq1v7+xwOOqFvNJs2Lk68WpG+BFRnpKnsqFo6orGiYmDyDuNDfPLl9bdGt2L
84MCGxKLTq7uVbcX5SlEiQ3i95L/bt5rh7yz2PBVxaAhW2pyXpzLBurNU+MR
X/DzBHs1NhyAWe/mKVsgrzobrv44Nu3URczTUk02GHcdKQnbb4a82myo5vf2
bftggv1Jhw1rTbdPHPM2wvlyKRtOCy46GfoYIu9yNgy2GQdY7DEQ1bfagA3H
+3rIS9WWYX9ayQYxsS4t6ualyLuaDc7y9f0/6xZhfzJhQ0rIQkeFXh3kXcuG
y0dd/NSGNLE/mbPhhWuxbYbDQuxPwIba+ZbiWt/mIO9GNiiuOcqxS1XH/mTD
Bvmt45QH82Zjf7JjQ/jS75lLPqkirz0bLt77PMVcQQn703Y2eObkyKbJzEHe
XWzI8OlufF4zA3n3sEGo9F/owyfK2J8c2fCT48dpeDUNeQ+w4UKjv+y+w0rY
nw6xgXdh20jfGjnsT65seL5VkjUsL4e8R9gwHH31G9d/CvYnTyIPBjLLFwsn
zx9PsOHQif2rds7D88ST3myQYAdvDvmD86bjaTYcmcgq0GNJI68fG770m4VE
//6DfhbAhg8pe/O8c/G8UfsCGzhRB3fVGvzC/ecSG65rnLjgFySO/SmIDZW/
s63+kx8U7e8DIWw4le5/3JEphrxX2SAtm29ecusH+sYNYj3KhRnR6WLIG84G
BdOADVqb+kT7XVwkG3rPy6/dc3PyvDGaDZvjdvpxb37F/ece8X7cmHu6Ox/n
y4AHRD4cGe6pwm70PxIb7so/yOm4PCzyOUcqG7xGZcIeGX8V7e9WDDbUH50w
S3QdRF42G5KbohZYPvyKfshjw37xc/8KrAdE+/sMIRu2OG38nmXci378mA1x
vLO5g2KT55fxbEjXmsd/oYDnkc0JbKjrr6hTNWxD3iQ2OKyIGEmY6EGfTGVD
zr6yUPdbDcj7gg39ffrmIR+60Z8y2RCme5G6/Uod+m0OG969pgSkvu1B3tcE
v1hooJ9Cjcgf3QrYsPpgb9cTvR70z2I2zIu8+W9jYSXyvmFD6aPP83wCO0X7
u0E5G0KKXCM97CfP76rYEDXSea5Bqh39qZYNb4MeZnmNlIl8c/wdG86fUN7b
5dCKvI1sWMAYdfH6V4K+/IENPtWxvDNfP6AvfiLW3zLFz4I86c+f2XDNxfNN
wvt36IsdbIhNbRh3VqxG3i42uJ/Zq7/n9+T541eCz1Ded8PUWvTFXiJPMdbf
7xi8Rd4BIr+0J0t1t9WiP/1kQ0Lg/eWnVArQF0fYcOvQzSITv1rk/cWGgCPT
a8QiM9AX/7DBqsdEW0quBnn/scFkuUTd7cwU5BXngBdTMLXHpgZ9UYoDwkTp
1jleKcgrwwGGbFzphawq9EU5Dix0GgkyC09FX5zOgWiVJTt6pSfPGxU5MIVf
3qF9Jxl9UZkDoek9rQc3l6IvzuFAaVGQ74GINORV5YBS6r/Ue/WF6IvzOdD0
Zv+mbl+c/+wXcKD627w7TkF4/mWqxYFOldMxuZdfoC8u5sBM8bfZPQ25yLuU
A7z3gynv3TNE9ZVezoG51q/7VNVeoS/qc0DqkEDJQu8F8hpyQCP0p5BjkIO+
aMQBaqWYBr82FXmNOXDtoe0Dq7Yc9EUz4vrhN8ZO+CejH6/nwLgT92jW8Vzk
teTA5kF6/LVTz3F+seKAzllNm/6o1+jHmzhwgbNnVZ9bAvJu5kDZmxId+os8
nFe3csA1g7ekMzoBebcR9TUzZoivyRfVV3snBz5spNUubnyO/WkPBzb8DTRI
KMpDXkeiHo5nZvkHpGJ/cuLA0hT1Wtf+1zh/OXNg/qOcB3l7s5D3MAdOetgP
FZ18JcpTtjsHftM7oVx98nzzKAdOfYy+IlU7eX59nFjfNflLEq0l2J9OcuD4
o4S1C5sxT4E+RD0yFk0L5FRgfzrDgaN2kSfrHz7B/uRP1JN31M9DuxZ5z3Pg
nIxMoFv2Y+xPgRzgqC5tqnfD80bt/zhA5k3/zyyLjbwhHNhrvOqSIqsR+9NV
DtR/nhdhkMpE3usc8F+suye2qAn7UxixvrnJ28uUk7A/3eLA4UTNS6M/PyDv
bQ6UXNOemNOCeYq7y4HIj/1X/u75gLwxHFgbkm5j1Yifj0TEcuCFxMnP7V4f
sD9RiHxv0J8afbMKeekcUPW/IaOv3oT9icUBF1O+9HlqI/YnLgfS08qz7rpP
fr4m4ADrbeWtbTKfsT894kD2si+5UivqsR/Hc6DZ9XRD4xOct8QSiPvR68VU
dfN32J+ec0Ct6aOeVEkP8qZw4Pn2BINNe99hf0rnwNSFhVsNH/Rif3rJgWkR
Hr+FT6qRN5sDSRvT4q2X92N/yiXe39w/Ow7fqsX+lM+Bi71DuTYZOG8FFHEg
MNNh14m6FuxPpUQ+fNNctAuGkLeMqIdkkgp3Uwf2p0oOPFI8UOdU9hP7Uw0H
9DQWvO6r60DedxwIu64+r814CPtTI3E/pn2fYxXbj/3pPQe2/Wjqv1MxjLwf
OXCoT2+9zeMh7E+tHNj66p7Z2JNR5G3ngLj7hjf8XePYnzo5MPpu8d9p70ew
P/VwIPbh7qKG8xPI+53Iw2aH/S9XjmJ/6ufAgSlXWGFkcfTFHxy4ZOGp3pAw
irzDHDApU27q/SiFvjjGgfXvvDOGh8aQ9zcHVj9aL6/8TQb9+C8Hkl+/MSx3
xvNGVXEuOGVZjolHyqMfS3Fh824LqutDMfSnKVygf672cj43HX1Rlgt5hGou
cpNGP5bnQh0rg5QXoIi+OIMLOptUdbQ+y6EvzuTCDOs45v6pk+eNs7ngsdvw
qkLf5PNiKlwo2qL6+OdXnC9D5nHhezqbHcpWRn/S4IKUxjrq+7Vz0RcXcuFR
w7bqvuVqyLuIC72xkX2hp9XQF5dwgRs1Hj33nAb64jIurLmrHDG1DedLVX0u
ZP4c7ifLLkJfNORC2sDbQ/d0cL4cXsWFffxY574bS9Cf1nCh+GNh5vysJeiL
plxwK3E80V6pj7zruFAp8O/aLKOLvmjBhaWuuaces1eiL27gwinjoNOytobI
a82FKR1BJ7j6xuiLtlzo8zobNDjfBHm3cOG9IJhZVmWOvujAhbiBum3byy3R
F3dw4fm3gsE106yRdzcXjN49umIhtxl9cR8XFs8P2bPj5w70Yydivd2+drsa
9iCvMxeeBRqHFZs44fzuwgXhQukZr6JdkNeNC1PX39QkZ3jiPOvBBYt9s3UO
ufuhLx7jQvInr5sKEheR14sL06/u9jhRP3neeIqod5Sm9Z2Qu+jHvlxIbDo+
ZVSGhrxnuRD/YCx0w3EezrPnuNDm1dgwaPwYeS9yQZHjPkXxWjzOs5e5EPqf
WPuv4gSc34O5kH35pLfdCjxv1L7Chdn7tj62qkvCefY6Fzj+pC5p8yT04zAu
eGYvj/A5+AR5I7hQOMy95nGDh/NsFBdq/qg/iBbSkPcOF9yZUUdMuPeR9z6R
P1UZReMVt3B+f8iF4zMcHxsMhCAvmQs5Ny8Ph5zwx3mWxgWZwISOKbd8cH5n
cmFusElKUbon8nK4MFFEnya90xXnWT4Xgm51BxYtckLeOC6YXbq/IenQTuR9
woWkC5za+AVbcH5/Rqxn2Z13UjG2yPucC/vjliuHrcTzx/FkLtjUzh9+mg84
v6dxwcVd3NNk0AJ5M7hw3u35hZkfzXCezeLCF6eXpwLXrsX5/RUXdvmeiLpt
sBp587jwWyIyd5OWEc7vhVxQG88MGQ7XQ94SLrxt7fq5acgA+9NbLgR7nSnd
lqSD83sFF+oNftl4my1F3mou/G1qm3HwxCKcZ+u4cLX+XqX5hcXYnxq4YDXn
4oy48QXI+54Le/ST39S+Ucf+9JELKxdrmxioqiJvC3E/LAinXJNVw/7UxoWu
l0qH4+LmYn/6QvQbyQFL2qNZyNvNhVXhqWx/8izsT9+44Ou7D97ZT5439nGh
aebFedt/KyPvIBfWcm9WRofKY38a4gK/dGFGnM5M5B0l7ocPWyRW35LF/jTO
hQ/7Xv9QOo+ff9lPcOGxcNTF2kgCecV4cGT34T7b4/LYnyR5MPtZPE/KXQz7
0xQedLxSGJjfMxV5ZXkg/iI4TrLiH/riNB4cs0yVkHKdgrwKPGj4scjO6dcY
+pMSD6xHI4NWiElif5rFg85D/OnH9v7C/WcuD3oZ6rKpuybQF9V4cIfd9Dx2
3Qj6ojoPXjzIaxu/8Bv3H00eHPh+7J+f3Dj6ojYPNPaetdO8P4q+qMMD57xn
sp7VI+jHujzgbrzqtadoEH1Rj7j+UkmdvfRh9OMVPCB95e+TuTb5PNIqHqzY
45Ctu2YEfXEND5rl1W0fMbuQ14QHf8o6FY3mDKMvruXBY7WTrr7ybchrzoNP
p7OUD/yZfH4IePB2ZsiSC9vb0Rc38mC58mWnv7o/kdeGB0qjGdy09Bb0Jzse
zPpEsxq4OIC+aM+D9fMfFjjeeI+823nwXPfhr+X+X9EXd/Gg/avuL68NDeiL
e3nwW3BMPT61E3n382DDm/NMEr8ZffEgDxLKRmZYVbcjrwsPEhtK2k6OtKA/
ufHA8PvnmaoPWtEXj/DAyzLKYd32VuT15MEQrdlUbl0T+uIJHkgppqqlL2lF
X/TmQeaq8mnkH9XIe5oHcm25QWl1k+eNfjx4nRgZHEad9MUA4vqnXDhTL7Sg
P13gwXmttCLXzEL0xUs8yPviOE17Gp5nOgbxIHbZaW+D7fh8o1UoD+xDIhdx
jzejL17jgfGMYVb2WTxv1L7JA+Wk6x0Voe/RFyN4cNv5b5mvUTbyRhHX37ZH
tilm8rw2mgf/Jc5zGzTJRV+8R+R93b939l41yPuAB2W/t9NmSbxCXyTxYMe2
b+3i3uXoi1Qe/NALzu44kY+8DB4I134WExdOnk+xeRDdzAhpci5EXh4Pjo46
y+m0FCCvkAdPp7aylYyK0RcfE7xniv9KzMtF3qc8WCU2xbG7oRB9MZEHU/54
veKlvURfTCbutxLn/bOaC5E3jQcSntdbSy6koS++4EF+h9tySn4+8mYSrz/s
9vft/VTkzSHun+tj7ksoOG8Vv+ZBin57cJBg8nnDAh4EN/XMtB3LRV8s5sGH
8vNDM2anoy++4UFJUPbBNn4O8pbzwM/YuWyjSzrOs1U8eFc/R8xkRxb6Yi0P
WqOfjCzyTUfeeh4IHjrMVRjORF9s4sHJousKHclpyNvMg9DrHI2el3jeqNpC
1E97mv3Ts5PP/7bx4O/Jlg05bHy+dbyDyJN6222t8uc4z3YR/epUr22pbj76
8Vce5DCTr8udjUfeXqL/rePxpljieXfyAHF/3j/U5kLlIu9PHkh6D/yXcKEU
+9MIDwJmyks5aTGwP/3iQQ2/T4q1vgx5//DgluaphVo5ZOxP/3igsi4BGqfj
89f2EnwQLDtJXh3NQl5pPgw6hc02sJ48L5zKhxNX3hk2rnmEvNP4cM9TtUXm
cyX2JwU+DJUsytLeMfn8sSIfpul7bJfYgfNWpzIfPm85E6u+Kg/70xw+aHon
0kbPlGN/UuXDB4rZM8HfEuSdzwcnQyv7KetLsT8t4MODL3objtpUIa8WH6bP
Uv44bjh5nr2YDwlHXHiOUvi86MmlfHCXempwUvY18i7ng+/qYyGlEvh5kK0B
8fd27qlnNWVhf1rJB68lblYrklqRdzUfNt9U7Nn0/iX2JxM+XLRJVgy724a8
a/nw78AnqYNh2ci7ng/X3edYuoZ9wf5kSVxv/GXjxt14/1Rb8eFMS4QPw7gL
+9Mmoj5P/30N/lGK/WkzH3oqf90uXNSFvFv58LXYb0qvaj32p218uPWjrHLd
vW7k3cmH+Ibw/ACdT8i7h7i+aypXQrML+5MjH3b856B212XyeY0DfBjXK7aX
s/mC/ekQH0YYUh7r9nVhf3LlQ+KHswe9PnYi7xE+nHtefD2pdQD7kycfUqP3
BEgFdGM/Ps6Hm8YsT5cDP5H3JB8Wb7VTubOvHfuTDx/MlbvjPhsPI+8ZPszf
99cnPKYT+5M/HzwbWtc5OY9jfzrPh/0ZA2ZGepOfpwbyobLtaGQ39y/2p/+I
v082WC95ZwD7UwgfPIJtzPN4+P0Qx6t8uFzzYo57JH5fw+oGH2Lz7/7lLRJH
Xwwn8spzbfomPoL9KZIPWraui2Q/i6MvRvPhqFdVwcbNuL+L3SPyv60z//a4
BPpiDB8CPuwh3zQSQ1+MJe4X2SjtVU+l0Y8pfJjXkLv89cHJ51fpfAhz+3lX
+5E0+iKLD4oLtMUaV09Ff+LyoXT1l7NHzGXQFwV84I5zbosdV0A/fkTwWnZo
ffOXRV+M58ND6xdTKKbK6IsJxO93X/0ifQbnS6skPrz59HTrueVz0BdTifot
dljX+XwG+uILov4d114f2ayK/pTJh/SLO3+EFcxCX8zmQ4WYrsvCWA3kzeVD
X+k7bf4KFfTFfD50froSGauDz58WF/FhbZ5C3SINTeQt5cM3Te/ofOfJ71uV
EfkY/inJ2KeFvJXEej43fPxPQRd5a/iQP7WecvnoMvTFd3wY2PbPPD50OfI2
8uHq+3Vibs366Isf+PAjXcLsc4ch+uInPhxWT/yX52KEvJ/50J88v+KgpDH6
Ygcffp6MH+y9uA55u4j7SWbJBrvd5sjbwwf9JKUK37dW6Ivf+VCdNNP2aYg1
8vbzwXQJTJ+tuA198QfRb44Vqzhv34V+PMyH4obxF011jsg7RuSPmfLpLOsA
zrO/+bAkW99gwx139OO/fKg9nqpkM+MU8ooL4FB46r9XQwHox1ICqHn4wXzU
IQh5ZQRw1HrRperyCJxn5QTQ8Gloi0/IQ/Tj6QLYx+GZxi1nI6+iAJyVXcrd
UoU4zyoL4GC/Wkfv4yc4v88WQNEywUX3L0+RV0UAWooB12ye4/lh9TwBlP26
Oij5+TnyagjA5vJfu2yLZJxnFwqgbmilffZoAs7viwTgaft2+twYIfIuEYD2
Fums4zvZOM8uE0Dvvb26ziGxOL/rC4D6PqU0+OAd5DUUwBLjAWvl2us4vxsJ
IDdZXvt5+EXkNRZAd8Kd0wvPnMF51kwA2Z/jf5AsvXB+Xy+AZztcr1V5HUFe
SwF80Zm3OL35IM6zGwSwwJu37GzVXpzfrQVA4f8IPzG6FXltBTAcdqiGYYvf
b8zeIgDGH53ldTKTzyc7CODG5ec1r3KtcZ7dIYCSy/nvxZQscH7fLYCZEw/c
n+3HPAXuE8Drj50v/Y+Y4TzrJIB3NwzUH6eaYH9yFsC5kiDnM6eNkPewAKZr
1tgpbjfE/uQugMDp+vr1pw2Q9yhxPfEla7Z36CLvcQH4yO3ULDs4+XzqSQFI
Vj30dMtYhLyniPUP6Z8kj+tgf/IVwIwS2tmaGk3sT2cFUFBf6GfvgN9vzD4n
gP7C35anKuZgf7oogIUtP1aq56gj72UBWDKvG0fPmI28wUQ+7j/98rEMn2cP
uCKAr9/d+x4pKyHvdQHob9zISO6fjf0pTABr6kPHd4hP9qdbAkgvZs0ZuKKM
vLcFMHJTIqtZXB77013ieg4BXfIm+PnXjBji/0dN64N85ZA3VgA/azxPrXoq
i/2JLIDtIYZGBUVTkJcmgMz0kwsyHKZgf2IKYG1ygSbfTRr7E0cAhqoRcYI0
CeTlC2DxvIVKCxqlsT/FCWDrEk/nNT6T3294IoD1YlH2M4ckkPeZAOY92iuz
qWYMffE58fuKaTNT7osjb4oA7CWUZ5k0DaA/pQvg4jy9R/HPxbA/vSTu35W/
t8mE/sD9J5tYn3bvnTOJYtifcon7pcDjfpp9H/pingDuXZcLO+n+G/24UACk
lG3iD6tx3mooEUDMg11ZrqEj6ItvBeCtKVi2f10P+lOFANIsXr4y1xtGX6wW
QIui8ZaGKnw+NKZOAKfU4qK9pQbRFxsEIFfo8s5q+zf0xfcCGLTV3tXU2I+8
HwWw0zgvTrq2F32xVQD+t0d9Njt2I2+7AD5xsw88oHxHP+4k8i9U422jf0Zf
7BGAXs9gxbKTuL/LfRdA15vrAe+eTn7fpk8Ay50CD21a2YO+OCiAuX/q2r6I
1SHvENHPkoyLSkd60BdHiX6TMu2neEM18o4T+bTZeVh+1eT3MycEUPl2YvH8
qkr0RTEhJCce3k516UReSSHs2FpT96uyDP1pihBKmnuSFMvb0BdlhfDn8sd7
jSPlyCsvhGPG5lNNh1rQF2cI4Xf+MdcReIO+OFMIMiNnNE/a4HmE6mwhqHh9
KGatr0ZfVBECqfUIf0znHfKqCSH3o/uYWlo1+pO6EH58b+vcs68KfVFTCDFS
wRrHWbXIqy2Ejq3Tf52Xe4O+qCMEuyA9DdniWvRFXSHsl/nw59b6fOTVE8Li
Hel3XQtr0RdXCMFxeOPf3l0vkHeVEGa71DXlWNagL64Rwtbb0we0Fk9+/81U
CIfMYqMyD+HzuqbrhBDrb1N2wTgFfdFCCLcVTT9KZVShL24g+Eb/fr30MhV5
rYVAMfTfKqwsR1+0Ia63hM56NZaMvHZCeNaqMKtGshR90V4INyVOtFmqpKMv
bheCanCUeM81nC+f7RLCRcYT8bcTaeiLe4XQXpfxUsIUn9eM2C+E/3QazXLG
XiDvQSGMfeXo/Wbmoi+6EPXdaUx6lpmBvG5CyCf/PCp8Mzm/ewgh1S9dU+Xo
C/TjY0Lwuz/2RX0CnyfU9hKCeZKvjPtwKs6zpwj+7hJyan4O+qKvEF74hPSx
7yRb/A+yUEKr
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {2130.3, 0}, 
     PlotRange -> {{2130, 2190}, {0, 0.09067464600386217}}, DisplayFunction -> 
     Identity, AspectRatio -> 0.6, Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {2130.3, 0}, AxesStyle -> 
     Directive[
       GrayLevel[0], 
       Thickness[0.005], FontSize -> 14], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{2130, 2190}, {0, 0.09067464600386217}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {{{2120, 
         FormBox["2120", TraditionalForm]}, {2130, 
         FormBox["2130", TraditionalForm]}, {2140, 
         FormBox["2140", TraditionalForm]}, {2150, 
         FormBox["2150", TraditionalForm]}, {2160, 
         FormBox["2160", TraditionalForm]}, {2170, 
         FormBox["2170", TraditionalForm]}, {2180, 
         FormBox["2180", TraditionalForm]}, {2190, 
         FormBox["2190", TraditionalForm]}, {2200, 
         FormBox["2200", TraditionalForm]}}, {{0., 
         FormBox["0.`", TraditionalForm]}, {0.02, 
         FormBox["0.02`", TraditionalForm]}, {0.04, 
         FormBox["0.04`", TraditionalForm]}, {0.06, 
         FormBox["0.06`", TraditionalForm]}, {0.08, 
         FormBox["0.08`", TraditionalForm]}, {0.1, 
         FormBox["0.1`", TraditionalForm]}, {0.12, 
         FormBox["0.12`", TraditionalForm]}}}, TicksStyle -> GrayLevel[0]}],
   FormBox[
    FormBox[
     TemplateBox[{"\"m145c-exp\"", "\"c.2\"", "\"c.3\"", "\"c.4\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.033], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[0.036000000000000004`], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.033], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[0.036000000000000004`], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.033], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.033], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.033], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2, 0.2, 1.], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.033], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2, 0.2, 1.], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.033], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.8, 0.8], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.033], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.8, 0.8], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Thickness", "[", "0.004`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.004`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2, 0.2, 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.13333333333333336`, 0.13333333333333336`, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.2, 0.2, 1.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2, 0.2, 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2, 0.2, 1.], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.004`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.8, 0.8], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.5333333333333334, 0.5333333333333334], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0.8, 0.8]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.8, 0.8]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.8, 0.8], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.004`", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.739295921668127*^9, 3.73929603037576*^9}, {
   3.739296924791065*^9, 3.739296939714411*^9}, 3.7392969941732903`*^9, 
   3.739297103974003*^9, 3.739297170396213*^9, 3.739297682725359*^9, 
   3.739297717057458*^9, 3.739297778311508*^9, {3.739297861943371*^9, 
   3.739297982605835*^9}, {3.73929802895833*^9, 3.7392981764145393`*^9}, {
   3.739298212188097*^9, 3.7392982946006203`*^9}, 3.739298339494357*^9, {
   3.7392984744342327`*^9, 3.739298499115645*^9}, 3.739298543021117*^9, {
   3.739298881687348*^9, 3.7392988966448517`*^9}, {3.739298943924363*^9, 
   3.739298969151779*^9}, 3.739299060481079*^9, {3.739299114454796*^9, 
   3.739299121494207*^9}, 3.739299178498397*^9, 3.739316238446059*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Overlap", " ", "coefficients", " ", 
    RowBox[{"(", 
     RowBox[{"using", " ", "list", " ", "interpolation"}], ")"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Overlap", " ", "coefficients"}], " ", "=", " ", 
    RowBox[{"area", " ", "under", " ", "both", " ", 
     RowBox[{"(", "normalized", ")"}], "curves"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"l105cExpItp", "=", 
     RowBox[{"Interpolation", "[", "l105cExpLSNorm", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"l105cC1Itp", "=", 
     RowBox[{"Interpolation", "[", "l105cC1LSNorm", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"l105cC2Itp", "=", 
     RowBox[{"Interpolation", "[", "l105cC2LSNorm", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"l105cC4Itp", "=", 
     RowBox[{"Interpolation", "[", "l105cC4LSNorm", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"l105cC5Itp", "=", 
     RowBox[{"Interpolation", "[", "l105cC5LSNorm", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"l105cC6Itp", "=", 
     RowBox[{"Interpolation", "[", "l105cC6LSNorm", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m109cExpItp", "=", 
     RowBox[{"Interpolation", "[", "m109cExpLSNorm", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m109cC2Itp", "=", 
     RowBox[{"Interpolation", "[", "m109cC2LSNorm", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m109cC3Itp", "=", 
     RowBox[{"Interpolation", "[", "m109cC3LSNorm", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m109cC4Itp", "=", 
     RowBox[{"Interpolation", "[", "m109cC4LSNorm", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m109cC5Itp", "=", 
     RowBox[{"Interpolation", "[", "m109cC5LSNorm", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m109cC6Itp", "=", 
     RowBox[{"Interpolation", "[", "m109cC6LSNorm", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m145cExpItp", "=", 
     RowBox[{"Interpolation", "[", "m145cExpLSNorm", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m145cC2Itp", "=", 
     RowBox[{"Interpolation", "[", "m145cC2LSNorm", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m145cC3Itp", "=", 
     RowBox[{"Interpolation", "[", "m145cC3LSNorm", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m145cC4Itp", "=", 
     RowBox[{"Interpolation", "[", "m145cC4LSNorm", "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.739311852334592*^9, 3.739311946439904*^9}, {
  3.73931199830389*^9, 3.739312007296049*^9}, {3.73931222537243*^9, 
  3.739312428844975*^9}, {3.739312810382921*^9, 3.739312812655202*^9}, {
  3.739313616386384*^9, 3.739313636902678*^9}, {3.739315876508823*^9, 
  3.7393158782832327`*^9}, {3.739316271552063*^9, 3.739316271903781*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"OverlapCoefficient", "[", 
   RowBox[{
    RowBox[{"f1_", "[", "x__", "]"}], ",", 
    RowBox[{"f2_", "[", "x__", "]"}], ",", "min_", ",", "max_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"Min", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"f1", "[", "x", "]"}], ",", 
        RowBox[{"f2", "[", "x", "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "min", ",", "max"}], "}"}]}], "]"}], "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{"f1", "[", "x", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "min", ",", "max"}], "}"}]}], "]"}], "*", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{"f2", "[", "x", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "min", ",", "max"}], "}"}]}], "]"}]}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.73931244521716*^9, 3.739312515383318*^9}, {
   3.739312913346593*^9, 3.7393129925337152`*^9}, 3.73931305167801*^9, {
   3.73931334494048*^9, 3.73931335232589*^9}, {3.7393133925714273`*^9, 
   3.739313397333086*^9}, {3.739313465403699*^9, 3.7393136015810137`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"min", "=", "2120"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"max", "=", "2200"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"OverlapCoefficient", "[", 
        RowBox[{
         RowBox[{"l105cExpItp", "[", "x", "]"}], ",", 
         RowBox[{"l105cC1Itp", "[", "x", "]"}], ",", "min", ",", "max"}], 
        "]"}], ",", 
       RowBox[{"OverlapCoefficient", "[", 
        RowBox[{
         RowBox[{"l105cExpItp", "[", "x", "]"}], ",", 
         RowBox[{"l105cC2Itp", "[", "x", "]"}], ",", "min", ",", "max"}], 
        "]"}], ",", "\"\<N/A\>\"", ",", 
       RowBox[{"OverlapCoefficient", "[", 
        RowBox[{
         RowBox[{"l105cExpItp", "[", "x", "]"}], ",", 
         RowBox[{"l105cC4Itp", "[", "x", "]"}], ",", "min", ",", "max"}], 
        "]"}], ",", 
       RowBox[{"OverlapCoefficient", "[", 
        RowBox[{
         RowBox[{"l105cExpItp", "[", "x", "]"}], ",", 
         RowBox[{"l105cC5Itp", "[", "x", "]"}], ",", "min", ",", "max"}], 
        "]"}], ",", 
       RowBox[{"OverlapCoefficient", "[", 
        RowBox[{
         RowBox[{"l105cExpItp", "[", "x", "]"}], ",", 
         RowBox[{"l105cC6Itp", "[", "x", "]"}], ",", "min", ",", "max"}], 
        "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<N/A\>\"", ",", 
       RowBox[{"OverlapCoefficient", "[", 
        RowBox[{
         RowBox[{"m109cExpItp", "[", "x", "]"}], ",", 
         RowBox[{"m109cC2Itp", "[", "x", "]"}], ",", "min", ",", "max"}], 
        "]"}], ",", 
       RowBox[{"OverlapCoefficient", "[", 
        RowBox[{
         RowBox[{"m109cExpItp", "[", "x", "]"}], ",", 
         RowBox[{"m109cC3Itp", "[", "x", "]"}], ",", "min", ",", "max"}], 
        "]"}], ",", 
       RowBox[{"OverlapCoefficient", "[", 
        RowBox[{
         RowBox[{"m109cExpItp", "[", "x", "]"}], ",", 
         RowBox[{"m109cC4Itp", "[", "x", "]"}], ",", "min", ",", "max"}], 
        "]"}], ",", 
       RowBox[{"OverlapCoefficient", "[", 
        RowBox[{
         RowBox[{"m109cExpItp", "[", "x", "]"}], ",", 
         RowBox[{"m109cC5Itp", "[", "x", "]"}], ",", "min", ",", "max"}], 
        "]"}], ",", 
       RowBox[{"OverlapCoefficient", "[", 
        RowBox[{
         RowBox[{"m109cExpItp", "[", "x", "]"}], ",", 
         RowBox[{"m109cC6Itp", "[", "x", "]"}], ",", "min", ",", "max"}], 
        "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<N/A\>\"", ",", 
       RowBox[{"OverlapCoefficient", "[", 
        RowBox[{
         RowBox[{"m145cExpItp", "[", "x", "]"}], ",", 
         RowBox[{"m145cC2Itp", "[", "x", "]"}], ",", "min", ",", "max"}], 
        "]"}], ",", 
       RowBox[{"OverlapCoefficient", "[", 
        RowBox[{
         RowBox[{"m145cExpItp", "[", "x", "]"}], ",", 
         RowBox[{"m145cC3Itp", "[", "x", "]"}], ",", "min", ",", "max"}], 
        "]"}], ",", 
       RowBox[{"OverlapCoefficient", "[", 
        RowBox[{
         RowBox[{"m145cExpItp", "[", "x", "]"}], ",", 
         RowBox[{"m145cC4Itp", "[", "x", "]"}], ",", "min", ",", "max"}], 
        "]"}], ",", "\"\<N/A\>\"", ",", "\"\<N/A\>\""}], "}"}]}], "}"}], ",", 
   
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<l105c\>\"", ",", "\"\<m109c\>\"", ",", "\"\<m145c\>\""}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<n.1\>\"", ",", "\"\<n.2\>\"", ",", "\"\<n.3\>\"", ",", 
        "\"\<n.4\>\"", ",", "\"\<n.5\>\"", ",", "\"\<n.6\>\""}], "}"}]}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.739313656157098*^9, 3.7393137416681547`*^9}, {
   3.739313798294414*^9, 3.739313979819118*^9}, 3.739314022592754*^9, {
   3.7393140848004704`*^9, 3.739314092514715*^9}, {3.739314136702504*^9, 
   3.739314136798403*^9}, {3.7393142037379227`*^9, 3.739314234675618*^9}, {
   3.739314282969949*^9, 3.7393144641740103`*^9}, {3.7393158701453323`*^9, 
   3.7393158720919933`*^9}, {3.739316291719256*^9, 3.739316329917307*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"n.1\"\>",
       HoldForm], 
      TagBox["\<\"n.2\"\>",
       HoldForm], 
      TagBox["\<\"n.3\"\>",
       HoldForm], 
      TagBox["\<\"n.4\"\>",
       HoldForm], 
      TagBox["\<\"n.5\"\>",
       HoldForm], 
      TagBox["\<\"n.6\"\>",
       HoldForm]},
     {
      TagBox["\<\"l105c\"\>",
       HoldForm], "0.6144905058519494`", "0.9488772879294423`", "\<\"N/A\"\>",
       "0.18901121957045622`", "0.4239310238018342`", 
      "0.17247803825068805`"},
     {
      TagBox["\<\"m109c\"\>",
       HoldForm], "\<\"N/A\"\>", "0.8799025362667813`", "0.3723819998891966`",
       "0.7101454121334869`", "0.5789399873996584`", "0.8299526029919204`"},
     {
      TagBox["\<\"m145c\"\>",
       HoldForm], "\<\"N/A\"\>", "0.6811080774718619`", "0.8822329294014758`",
       "0.7540908976212896`", "\<\"N/A\"\>", "\<\"N/A\"\>"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{"l105c", "m109c", "m145c"}, {
      "n.1", "n.2", "n.3", "n.4", "n.5", "n.6"}}]]]], "Output",
 CellChangeTimes->{
  3.739313729645039*^9, 3.73931381242163*^9, {3.739313897581613*^9, 
   3.7393139144963913`*^9}, {3.739313945329213*^9, 3.739313981653081*^9}, 
   3.739314024512241*^9, {3.739314088121991*^9, 3.7393140944100733`*^9}, 
   3.739314220912401*^9, {3.739314293580504*^9, 3.739314304069416*^9}, 
   3.739314334480022*^9, {3.739314388497727*^9, 3.7393144005358067`*^9}, 
   3.739314471930765*^9, {3.7393163236993513`*^9, 3.739316334357895*^9}}]
}, Open  ]]
},
WindowSize->{1040, 747},
WindowMargins->{{160, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 29, \
2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 3015, 80, 199, "Input"],
Cell[3576, 102, 2024, 60, 114, "Input"],
Cell[5603, 164, 1360, 38, 80, "Input"],
Cell[6966, 204, 2751, 81, 148, "Input"],
Cell[9720, 287, 2960, 77, 131, "Input"],
Cell[12683, 366, 3434, 101, 386, "Input"],
Cell[CellGroupData[{
Cell[16142, 471, 3443, 82, 165, "Input"],
Cell[19588, 555, 114779, 2023, 218, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[134404, 2583, 3191, 80, 148, "Input"],
Cell[137598, 2665, 113804, 2000, 224, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[251439, 4670, 2760, 69, 131, "Input"],
Cell[254202, 4741, 73894, 1307, 224, "Output"]
}, Open  ]],
Cell[328111, 6051, 3090, 82, 352, "Input"],
Cell[331204, 6135, 1208, 32, 46, "Input"],
Cell[CellGroupData[{
Cell[332437, 6171, 4123, 99, 318, "Input"],
Cell[336563, 6272, 2245, 57, 92, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
